'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("WatchdogDataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class WatchdogDataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableEvent_History As Event_HistoryDataTable
    
    Private tableIrrigation_History As Irrigation_HistoryDataTable
    
    Private tableIrrigation_Control As Irrigation_ControlDataTable
    
    Private tableEvent_Current_State As Event_Current_StateDataTable
    
    Private tableWater_Usage_History As Water_Usage_HistoryDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Event_History")) Is Nothing) Then
                MyBase.Tables.Add(New Event_HistoryDataTable(ds.Tables("Event_History")))
            End If
            If (Not (ds.Tables("Irrigation_History")) Is Nothing) Then
                MyBase.Tables.Add(New Irrigation_HistoryDataTable(ds.Tables("Irrigation_History")))
            End If
            If (Not (ds.Tables("Irrigation_Control")) Is Nothing) Then
                MyBase.Tables.Add(New Irrigation_ControlDataTable(ds.Tables("Irrigation_Control")))
            End If
            If (Not (ds.Tables("Event_Current_State")) Is Nothing) Then
                MyBase.Tables.Add(New Event_Current_StateDataTable(ds.Tables("Event_Current_State")))
            End If
            If (Not (ds.Tables("Water_Usage_History")) Is Nothing) Then
                MyBase.Tables.Add(New Water_Usage_HistoryDataTable(ds.Tables("Water_Usage_History")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Event_History() As Event_HistoryDataTable
        Get
            Return Me.tableEvent_History
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Irrigation_History() As Irrigation_HistoryDataTable
        Get
            Return Me.tableIrrigation_History
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Irrigation_Control() As Irrigation_ControlDataTable
        Get
            Return Me.tableIrrigation_Control
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Event_Current_State() As Event_Current_StateDataTable
        Get
            Return Me.tableEvent_Current_State
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Water_Usage_History() As Water_Usage_HistoryDataTable
        Get
            Return Me.tableWater_Usage_History
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As WatchdogDataSet1 = CType(MyBase.Clone,WatchdogDataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Event_History")) Is Nothing) Then
                MyBase.Tables.Add(New Event_HistoryDataTable(ds.Tables("Event_History")))
            End If
            If (Not (ds.Tables("Irrigation_History")) Is Nothing) Then
                MyBase.Tables.Add(New Irrigation_HistoryDataTable(ds.Tables("Irrigation_History")))
            End If
            If (Not (ds.Tables("Irrigation_Control")) Is Nothing) Then
                MyBase.Tables.Add(New Irrigation_ControlDataTable(ds.Tables("Irrigation_Control")))
            End If
            If (Not (ds.Tables("Event_Current_State")) Is Nothing) Then
                MyBase.Tables.Add(New Event_Current_StateDataTable(ds.Tables("Event_Current_State")))
            End If
            If (Not (ds.Tables("Water_Usage_History")) Is Nothing) Then
                MyBase.Tables.Add(New Water_Usage_HistoryDataTable(ds.Tables("Water_Usage_History")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableEvent_History = CType(MyBase.Tables("Event_History"),Event_HistoryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEvent_History) Is Nothing) Then
                Me.tableEvent_History.InitVars
            End If
        End If
        Me.tableIrrigation_History = CType(MyBase.Tables("Irrigation_History"),Irrigation_HistoryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIrrigation_History) Is Nothing) Then
                Me.tableIrrigation_History.InitVars
            End If
        End If
        Me.tableIrrigation_Control = CType(MyBase.Tables("Irrigation_Control"),Irrigation_ControlDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIrrigation_Control) Is Nothing) Then
                Me.tableIrrigation_Control.InitVars
            End If
        End If
        Me.tableEvent_Current_State = CType(MyBase.Tables("Event_Current_State"),Event_Current_StateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEvent_Current_State) Is Nothing) Then
                Me.tableEvent_Current_State.InitVars
            End If
        End If
        Me.tableWater_Usage_History = CType(MyBase.Tables("Water_Usage_History"),Water_Usage_HistoryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWater_Usage_History) Is Nothing) Then
                Me.tableWater_Usage_History.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "WatchdogDataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/WatchdogDataSet11.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableEvent_History = New Event_HistoryDataTable()
        MyBase.Tables.Add(Me.tableEvent_History)
        Me.tableIrrigation_History = New Irrigation_HistoryDataTable()
        MyBase.Tables.Add(Me.tableIrrigation_History)
        Me.tableIrrigation_Control = New Irrigation_ControlDataTable()
        MyBase.Tables.Add(Me.tableIrrigation_Control)
        Me.tableEvent_Current_State = New Event_Current_StateDataTable()
        MyBase.Tables.Add(Me.tableEvent_Current_State)
        Me.tableWater_Usage_History = New Water_Usage_HistoryDataTable()
        MyBase.Tables.Add(Me.tableWater_Usage_History)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEvent_History() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIrrigation_History() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeIrrigation_Control() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEvent_Current_State() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeWater_Usage_History() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As WatchdogDataSet1 = New WatchdogDataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Event_HistoryRowChangeEventHandler(ByVal sender As Object, ByVal e As Event_HistoryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Irrigation_HistoryRowChangeEventHandler(ByVal sender As Object, ByVal e As Irrigation_HistoryRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Irrigation_ControlRowChangeEventHandler(ByVal sender As Object, ByVal e As Irrigation_ControlRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Event_Current_StateRowChangeEventHandler(ByVal sender As Object, ByVal e As Event_Current_StateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Water_Usage_HistoryRowChangeEventHandler(ByVal sender As Object, ByVal e As Water_Usage_HistoryRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Event_HistoryDataTable
        Inherits Global.System.Data.TypedTableBase(Of Event_HistoryRow)
        
        Private columnEvent_ID As Global.System.Data.DataColumn
        
        Private columnEvent_Timestamp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Event_History"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Event_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Event_TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent_Timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Event_HistoryRow
            Get
                Return CType(Me.Rows(index),Event_HistoryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_HistoryRowChanging As Event_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_HistoryRowChanged As Event_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_HistoryRowDeleting As Event_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_HistoryRowDeleted As Event_HistoryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEvent_HistoryRow(ByVal row As Event_HistoryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEvent_HistoryRow(ByVal Event_ID As String, ByVal Event_Timestamp As Date) As Event_HistoryRow
            Dim rowEvent_HistoryRow As Event_HistoryRow = CType(Me.NewRow,Event_HistoryRow)
            Dim columnValuesArray() As Object = New Object() {Event_ID, Event_Timestamp}
            rowEvent_HistoryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEvent_HistoryRow)
            Return rowEvent_HistoryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Event_HistoryDataTable = CType(MyBase.Clone,Event_HistoryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Event_HistoryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEvent_ID = MyBase.Columns("Event_ID")
            Me.columnEvent_Timestamp = MyBase.Columns("Event_Timestamp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEvent_ID = New Global.System.Data.DataColumn("Event_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvent_ID)
            Me.columnEvent_Timestamp = New Global.System.Data.DataColumn("Event_Timestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvent_Timestamp)
            Me.columnEvent_ID.AllowDBNull = false
            Me.columnEvent_ID.MaxLength = 4
            Me.columnEvent_Timestamp.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEvent_HistoryRow() As Event_HistoryRow
            Return CType(Me.NewRow,Event_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Event_HistoryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Event_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Event_HistoryRowChangedEvent) Is Nothing) Then
                RaiseEvent Event_HistoryRowChanged(Me, New Event_HistoryRowChangeEvent(CType(e.Row,Event_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Event_HistoryRowChangingEvent) Is Nothing) Then
                RaiseEvent Event_HistoryRowChanging(Me, New Event_HistoryRowChangeEvent(CType(e.Row,Event_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Event_HistoryRowDeletedEvent) Is Nothing) Then
                RaiseEvent Event_HistoryRowDeleted(Me, New Event_HistoryRowChangeEvent(CType(e.Row,Event_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Event_HistoryRowDeletingEvent) Is Nothing) Then
                RaiseEvent Event_HistoryRowDeleting(Me, New Event_HistoryRowChangeEvent(CType(e.Row,Event_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEvent_HistoryRow(ByVal row As Event_HistoryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As WatchdogDataSet1 = New WatchdogDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Event_HistoryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Irrigation_HistoryDataTable
        Inherits Global.System.Data.TypedTableBase(Of Irrigation_HistoryRow)
        
        Private columnEvent_ID As Global.System.Data.DataColumn
        
        Private columnEvent_Timestamp As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Irrigation_History"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Event_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Event_TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent_Timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Irrigation_HistoryRow
            Get
                Return CType(Me.Rows(index),Irrigation_HistoryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_HistoryRowChanging As Irrigation_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_HistoryRowChanged As Irrigation_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_HistoryRowDeleting As Irrigation_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_HistoryRowDeleted As Irrigation_HistoryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIrrigation_HistoryRow(ByVal row As Irrigation_HistoryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIrrigation_HistoryRow(ByVal Event_ID As String, ByVal Event_Timestamp As Date) As Irrigation_HistoryRow
            Dim rowIrrigation_HistoryRow As Irrigation_HistoryRow = CType(Me.NewRow,Irrigation_HistoryRow)
            Dim columnValuesArray() As Object = New Object() {Event_ID, Event_Timestamp}
            rowIrrigation_HistoryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIrrigation_HistoryRow)
            Return rowIrrigation_HistoryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByEvent_ID(ByVal Event_ID As String) As Irrigation_HistoryRow
            Return CType(Me.Rows.Find(New Object() {Event_ID}),Irrigation_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Irrigation_HistoryDataTable = CType(MyBase.Clone,Irrigation_HistoryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Irrigation_HistoryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEvent_ID = MyBase.Columns("Event_ID")
            Me.columnEvent_Timestamp = MyBase.Columns("Event_Timestamp")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEvent_ID = New Global.System.Data.DataColumn("Event_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvent_ID)
            Me.columnEvent_Timestamp = New Global.System.Data.DataColumn("Event_Timestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvent_Timestamp)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEvent_ID}, true))
            Me.columnEvent_ID.AllowDBNull = false
            Me.columnEvent_ID.Unique = true
            Me.columnEvent_ID.MaxLength = 3
            Me.columnEvent_Timestamp.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIrrigation_HistoryRow() As Irrigation_HistoryRow
            Return CType(Me.NewRow,Irrigation_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Irrigation_HistoryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Irrigation_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Irrigation_HistoryRowChangedEvent) Is Nothing) Then
                RaiseEvent Irrigation_HistoryRowChanged(Me, New Irrigation_HistoryRowChangeEvent(CType(e.Row,Irrigation_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Irrigation_HistoryRowChangingEvent) Is Nothing) Then
                RaiseEvent Irrigation_HistoryRowChanging(Me, New Irrigation_HistoryRowChangeEvent(CType(e.Row,Irrigation_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Irrigation_HistoryRowDeletedEvent) Is Nothing) Then
                RaiseEvent Irrigation_HistoryRowDeleted(Me, New Irrigation_HistoryRowChangeEvent(CType(e.Row,Irrigation_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Irrigation_HistoryRowDeletingEvent) Is Nothing) Then
                RaiseEvent Irrigation_HistoryRowDeleting(Me, New Irrigation_HistoryRowChangeEvent(CType(e.Row,Irrigation_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIrrigation_HistoryRow(ByVal row As Irrigation_HistoryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As WatchdogDataSet1 = New WatchdogDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Irrigation_HistoryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Irrigation_ControlDataTable
        Inherits Global.System.Data.TypedTableBase(Of Irrigation_ControlRow)
        
        Private columnZone_ID As Global.System.Data.DataColumn
        
        Private columnZone_Name As Global.System.Data.DataColumn
        
        Private columnZone_Current_State As Global.System.Data.DataColumn
        
        Private columnZone_Request_State As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Irrigation_Control"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Zone_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZone_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Zone_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZone_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Zone_Current_StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZone_Current_State
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Zone_Request_StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZone_Request_State
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Irrigation_ControlRow
            Get
                Return CType(Me.Rows(index),Irrigation_ControlRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_ControlRowChanging As Irrigation_ControlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_ControlRowChanged As Irrigation_ControlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_ControlRowDeleting As Irrigation_ControlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Irrigation_ControlRowDeleted As Irrigation_ControlRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddIrrigation_ControlRow(ByVal row As Irrigation_ControlRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddIrrigation_ControlRow(ByVal Zone_ID As Integer, ByVal Zone_Name As String, ByVal Zone_Current_State As Integer, ByVal Zone_Request_State As Integer) As Irrigation_ControlRow
            Dim rowIrrigation_ControlRow As Irrigation_ControlRow = CType(Me.NewRow,Irrigation_ControlRow)
            Dim columnValuesArray() As Object = New Object() {Zone_ID, Zone_Name, Zone_Current_State, Zone_Request_State}
            rowIrrigation_ControlRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIrrigation_ControlRow)
            Return rowIrrigation_ControlRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Irrigation_ControlDataTable = CType(MyBase.Clone,Irrigation_ControlDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Irrigation_ControlDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnZone_ID = MyBase.Columns("Zone_ID")
            Me.columnZone_Name = MyBase.Columns("Zone_Name")
            Me.columnZone_Current_State = MyBase.Columns("Zone_Current_State")
            Me.columnZone_Request_State = MyBase.Columns("Zone_Request_State")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnZone_ID = New Global.System.Data.DataColumn("Zone_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZone_ID)
            Me.columnZone_Name = New Global.System.Data.DataColumn("Zone_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZone_Name)
            Me.columnZone_Current_State = New Global.System.Data.DataColumn("Zone_Current_State", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZone_Current_State)
            Me.columnZone_Request_State = New Global.System.Data.DataColumn("Zone_Request_State", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZone_Request_State)
            Me.columnZone_ID.AllowDBNull = false
            Me.columnZone_Name.AllowDBNull = false
            Me.columnZone_Name.MaxLength = 30
            Me.columnZone_Current_State.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewIrrigation_ControlRow() As Irrigation_ControlRow
            Return CType(Me.NewRow,Irrigation_ControlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Irrigation_ControlRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Irrigation_ControlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Irrigation_ControlRowChangedEvent) Is Nothing) Then
                RaiseEvent Irrigation_ControlRowChanged(Me, New Irrigation_ControlRowChangeEvent(CType(e.Row,Irrigation_ControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Irrigation_ControlRowChangingEvent) Is Nothing) Then
                RaiseEvent Irrigation_ControlRowChanging(Me, New Irrigation_ControlRowChangeEvent(CType(e.Row,Irrigation_ControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Irrigation_ControlRowDeletedEvent) Is Nothing) Then
                RaiseEvent Irrigation_ControlRowDeleted(Me, New Irrigation_ControlRowChangeEvent(CType(e.Row,Irrigation_ControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Irrigation_ControlRowDeletingEvent) Is Nothing) Then
                RaiseEvent Irrigation_ControlRowDeleting(Me, New Irrigation_ControlRowChangeEvent(CType(e.Row,Irrigation_ControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveIrrigation_ControlRow(ByVal row As Irrigation_ControlRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As WatchdogDataSet1 = New WatchdogDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Irrigation_ControlDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Event_Current_StateDataTable
        Inherits Global.System.Data.TypedTableBase(Of Event_Current_StateRow)
        
        Private columnRow_ID As Global.System.Data.DataColumn
        
        Private columnLast_Update As Global.System.Data.DataColumn
        
        Private columnGarage_Door As Global.System.Data.DataColumn
        
        Private columnGarage_Window_South As Global.System.Data.DataColumn
        
        Private columnGarage_Window_North As Global.System.Data.DataColumn
        
        Private columnGarage_Outside_Door As Global.System.Data.DataColumn
        
        Private columnGarage_Outside_Door_Lock As Global.System.Data.DataColumn
        
        Private columnGarage_Inside_Door As Global.System.Data.DataColumn
        
        Private columnGarage_Inside_Door_Lock As Global.System.Data.DataColumn
        
        Private columnKitchen_Window As Global.System.Data.DataColumn
        
        Private columnBack_Door As Global.System.Data.DataColumn
        
        Private columnBack_Door_Lock As Global.System.Data.DataColumn
        
        Private columnGreat_Room_Window_South As Global.System.Data.DataColumn
        
        Private columnGreat_Room_Window_North As Global.System.Data.DataColumn
        
        Private columnPlay_Room_Window_South As Global.System.Data.DataColumn
        
        Private columnPlay_Room_window_North As Global.System.Data.DataColumn
        
        Private columnFamiy_Room_Window_South As Global.System.Data.DataColumn
        
        Private columnFamily_Room_Window_Front_South As Global.System.Data.DataColumn
        
        Private columnFamily_Room_Window_Front_Middle As Global.System.Data.DataColumn
        
        Private columnFamily_Room_Window_Front_North As Global.System.Data.DataColumn
        
        Private columnFront_Door As Global.System.Data.DataColumn
        
        Private columnFront_Door_Lock As Global.System.Data.DataColumn
        
        Private columnDining_Room_Window_South As Global.System.Data.DataColumn
        
        Private columnDining_Room_Window_North As Global.System.Data.DataColumn
        
        Private columnMaster_Bath_Window As Global.System.Data.DataColumn
        
        Private columnMaster_Bedroom_Window_South As Global.System.Data.DataColumn
        
        Private columnMaster_Bedroom_Window_Back_South As Global.System.Data.DataColumn
        
        Private columnMaster_Bedroom_Window_Back_North As Global.System.Data.DataColumn
        
        Private columnSydney_Bedroom_Window As Global.System.Data.DataColumn
        
        Private columnEthan_Bedroom_Window As Global.System.Data.DataColumn
        
        Private columnSpare_Bedroom_Window_North As Global.System.Data.DataColumn
        
        Private columnSpare_Bedroom_Window_South As Global.System.Data.DataColumn
        
        Private columnMailbox As Global.System.Data.DataColumn
        
        Private columnBasement_Door As Global.System.Data.DataColumn
        
        Private columnBasement_Door_Lock As Global.System.Data.DataColumn
        
        Private columnBasement_Window_South As Global.System.Data.DataColumn
        
        Private columnBasement_Window_North As Global.System.Data.DataColumn
        
        Private columnBasement_Storage_Door As Global.System.Data.DataColumn
        
        Private columnServer_Room_Motion As Global.System.Data.DataColumn
        
        Private columnUpstairs_Hallway_Motion As Global.System.Data.DataColumn
        
        Private columnGreat_Room_Motion As Global.System.Data.DataColumn
        
        Private columnBasement_Motion As Global.System.Data.DataColumn
        
        Private columnExterior_Motion As Global.System.Data.DataColumn
        
        Private columnDoorbell As Global.System.Data.DataColumn
        
        Private columnTelephone As Global.System.Data.DataColumn
        
        Private columnCar_West As Global.System.Data.DataColumn
        
        Private columnCar_East As Global.System.Data.DataColumn
        
        Private columnHouse_Occupied As Global.System.Data.DataColumn
        
        Private columnBrine_Tank As Global.System.Data.DataColumn
        
        Private columnLizard_Habitat_Temp As Global.System.Data.DataColumn
        
        Private columnInternet_Link As Global.System.Data.DataColumn
        
        Private columnLizard_Fed As Global.System.Data.DataColumn
        
        Private columnStair_Lights As Global.System.Data.DataColumn
        
        Private columnGeofence_Reached As Global.System.Data.DataColumn
        
        Private columnRoomba_Run As Global.System.Data.DataColumn
        
        Private columnLeak_Detected As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Event_Current_State"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRow_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Last_UpdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLast_Update
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_Window_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Window_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_Outside_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Outside_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_Outside_Door_LockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Outside_Door_Lock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_Inside_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Inside_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Garage_Inside_Door_LockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarage_Inside_Door_Lock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Kitchen_WindowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKitchen_Window
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Back_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBack_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Back_Door_LockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBack_Door_Lock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Great_Room_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGreat_Room_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Great_Room_Window_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGreat_Room_Window_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Play_Room_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlay_Room_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Play_Room_window_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlay_Room_window_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Famiy_Room_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamiy_Room_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Family_Room_Window_Front_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamily_Room_Window_Front_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Family_Room_Window_Front_MiddleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamily_Room_Window_Front_Middle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Family_Room_Window_Front_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFamily_Room_Window_Front_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Front_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFront_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Front_Door_LockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFront_Door_Lock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Dining_Room_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDining_Room_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Dining_Room_Window_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDining_Room_Window_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Master_Bath_WindowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaster_Bath_Window
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Master_Bedroom_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaster_Bedroom_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Master_Bedroom_Window_Back_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaster_Bedroom_Window_Back_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Master_Bedroom_Window_Back_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaster_Bedroom_Window_Back_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sydney_Bedroom_WindowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSydney_Bedroom_Window
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Ethan_Bedroom_WindowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEthan_Bedroom_Window
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Spare_Bedroom_Window_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpare_Bedroom_Window_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Spare_Bedroom_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpare_Bedroom_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MailboxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMailbox
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Basement_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasement_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Basement_Door_LockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasement_Door_Lock
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Basement_Window_SouthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasement_Window_South
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Basement_Window_NorthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasement_Window_North
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Basement_Storage_DoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasement_Storage_Door
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Server_Room_MotionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServer_Room_Motion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Upstairs_Hallway_MotionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpstairs_Hallway_Motion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Great_Room_MotionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGreat_Room_Motion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Basement_MotionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasement_Motion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Exterior_MotionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExterior_Motion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DoorbellColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDoorbell
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TelephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Car_WestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCar_West
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Car_EastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCar_East
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property House_OccupiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHouse_Occupied
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Brine_TankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrine_Tank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Lizard_Habitat_TempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLizard_Habitat_Temp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Internet_LinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternet_Link
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Lizard_FedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLizard_Fed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Stair_LightsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStair_Lights
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Geofence_ReachedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeofence_Reached
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Roomba_RunColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomba_Run
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Leak_DetectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLeak_Detected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Event_Current_StateRow
            Get
                Return CType(Me.Rows(index),Event_Current_StateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_Current_StateRowChanging As Event_Current_StateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_Current_StateRowChanged As Event_Current_StateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_Current_StateRowDeleting As Event_Current_StateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Event_Current_StateRowDeleted As Event_Current_StateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEvent_Current_StateRow(ByVal row As Event_Current_StateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEvent_Current_StateRow( _
                    ByVal Row_ID As Integer,  _
                    ByVal Last_Update As Date,  _
                    ByVal Garage_Door As Integer,  _
                    ByVal Garage_Window_South As Integer,  _
                    ByVal Garage_Window_North As Integer,  _
                    ByVal Garage_Outside_Door As Integer,  _
                    ByVal Garage_Outside_Door_Lock As Integer,  _
                    ByVal Garage_Inside_Door As Integer,  _
                    ByVal Garage_Inside_Door_Lock As Integer,  _
                    ByVal Kitchen_Window As Integer,  _
                    ByVal Back_Door As Integer,  _
                    ByVal Back_Door_Lock As Integer,  _
                    ByVal Great_Room_Window_South As Integer,  _
                    ByVal Great_Room_Window_North As Integer,  _
                    ByVal Play_Room_Window_South As Integer,  _
                    ByVal Play_Room_window_North As Integer,  _
                    ByVal Famiy_Room_Window_South As Integer,  _
                    ByVal Family_Room_Window_Front_South As Integer,  _
                    ByVal Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Family_Room_Window_Front_North As Integer,  _
                    ByVal Front_Door As Integer,  _
                    ByVal Front_Door_Lock As Integer,  _
                    ByVal Dining_Room_Window_South As Integer,  _
                    ByVal Dining_Room_Window_North As Integer,  _
                    ByVal Master_Bath_Window As Integer,  _
                    ByVal Master_Bedroom_Window_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Sydney_Bedroom_Window As Integer,  _
                    ByVal Ethan_Bedroom_Window As Integer,  _
                    ByVal Spare_Bedroom_Window_North As Integer,  _
                    ByVal Spare_Bedroom_Window_South As Integer,  _
                    ByVal Mailbox As Integer,  _
                    ByVal Basement_Door As Integer,  _
                    ByVal Basement_Door_Lock As Integer,  _
                    ByVal Basement_Window_South As Integer,  _
                    ByVal Basement_Window_North As Integer,  _
                    ByVal Basement_Storage_Door As Integer,  _
                    ByVal Server_Room_Motion As Integer,  _
                    ByVal Upstairs_Hallway_Motion As Integer,  _
                    ByVal Great_Room_Motion As Integer,  _
                    ByVal Basement_Motion As Integer,  _
                    ByVal Exterior_Motion As Integer,  _
                    ByVal Doorbell As Integer,  _
                    ByVal Telephone As Integer,  _
                    ByVal Car_West As Integer,  _
                    ByVal Car_East As Integer,  _
                    ByVal House_Occupied As Integer,  _
                    ByVal Brine_Tank As Integer,  _
                    ByVal Lizard_Habitat_Temp As Integer,  _
                    ByVal Internet_Link As Integer,  _
                    ByVal Lizard_Fed As Integer,  _
                    ByVal Stair_Lights As Integer,  _
                    ByVal Geofence_Reached As Integer,  _
                    ByVal Roomba_Run As Integer,  _
                    ByVal Leak_Detected As Integer) As Event_Current_StateRow
            Dim rowEvent_Current_StateRow As Event_Current_StateRow = CType(Me.NewRow,Event_Current_StateRow)
            Dim columnValuesArray() As Object = New Object() {Row_ID, Last_Update, Garage_Door, Garage_Window_South, Garage_Window_North, Garage_Outside_Door, Garage_Outside_Door_Lock, Garage_Inside_Door, Garage_Inside_Door_Lock, Kitchen_Window, Back_Door, Back_Door_Lock, Great_Room_Window_South, Great_Room_Window_North, Play_Room_Window_South, Play_Room_window_North, Famiy_Room_Window_South, Family_Room_Window_Front_South, Family_Room_Window_Front_Middle, Family_Room_Window_Front_North, Front_Door, Front_Door_Lock, Dining_Room_Window_South, Dining_Room_Window_North, Master_Bath_Window, Master_Bedroom_Window_South, Master_Bedroom_Window_Back_South, Master_Bedroom_Window_Back_North, Sydney_Bedroom_Window, Ethan_Bedroom_Window, Spare_Bedroom_Window_North, Spare_Bedroom_Window_South, Mailbox, Basement_Door, Basement_Door_Lock, Basement_Window_South, Basement_Window_North, Basement_Storage_Door, Server_Room_Motion, Upstairs_Hallway_Motion, Great_Room_Motion, Basement_Motion, Exterior_Motion, Doorbell, Telephone, Car_West, Car_East, House_Occupied, Brine_Tank, Lizard_Habitat_Temp, Internet_Link, Lizard_Fed, Stair_Lights, Geofence_Reached, Roomba_Run, Leak_Detected}
            rowEvent_Current_StateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEvent_Current_StateRow)
            Return rowEvent_Current_StateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByLast_Update(ByVal Last_Update As Date) As Event_Current_StateRow
            Return CType(Me.Rows.Find(New Object() {Last_Update}),Event_Current_StateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Event_Current_StateDataTable = CType(MyBase.Clone,Event_Current_StateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Event_Current_StateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRow_ID = MyBase.Columns("Row_ID")
            Me.columnLast_Update = MyBase.Columns("Last_Update")
            Me.columnGarage_Door = MyBase.Columns("Garage_Door")
            Me.columnGarage_Window_South = MyBase.Columns("Garage_Window_South")
            Me.columnGarage_Window_North = MyBase.Columns("Garage_Window_North")
            Me.columnGarage_Outside_Door = MyBase.Columns("Garage_Outside_Door")
            Me.columnGarage_Outside_Door_Lock = MyBase.Columns("Garage_Outside_Door_Lock")
            Me.columnGarage_Inside_Door = MyBase.Columns("Garage_Inside_Door")
            Me.columnGarage_Inside_Door_Lock = MyBase.Columns("Garage_Inside_Door_Lock")
            Me.columnKitchen_Window = MyBase.Columns("Kitchen_Window")
            Me.columnBack_Door = MyBase.Columns("Back_Door")
            Me.columnBack_Door_Lock = MyBase.Columns("Back_Door_Lock")
            Me.columnGreat_Room_Window_South = MyBase.Columns("Great_Room_Window_South")
            Me.columnGreat_Room_Window_North = MyBase.Columns("Great_Room_Window_North")
            Me.columnPlay_Room_Window_South = MyBase.Columns("Play_Room_Window_South")
            Me.columnPlay_Room_window_North = MyBase.Columns("Play_Room_window_North")
            Me.columnFamiy_Room_Window_South = MyBase.Columns("Famiy_Room_Window_South")
            Me.columnFamily_Room_Window_Front_South = MyBase.Columns("Family_Room_Window_Front_South")
            Me.columnFamily_Room_Window_Front_Middle = MyBase.Columns("Family_Room_Window_Front_Middle")
            Me.columnFamily_Room_Window_Front_North = MyBase.Columns("Family_Room_Window_Front_North")
            Me.columnFront_Door = MyBase.Columns("Front_Door")
            Me.columnFront_Door_Lock = MyBase.Columns("Front_Door_Lock")
            Me.columnDining_Room_Window_South = MyBase.Columns("Dining_Room_Window_South")
            Me.columnDining_Room_Window_North = MyBase.Columns("Dining_Room_Window_North")
            Me.columnMaster_Bath_Window = MyBase.Columns("Master_Bath_Window")
            Me.columnMaster_Bedroom_Window_South = MyBase.Columns("Master_Bedroom_Window_South")
            Me.columnMaster_Bedroom_Window_Back_South = MyBase.Columns("Master_Bedroom_Window_Back_South")
            Me.columnMaster_Bedroom_Window_Back_North = MyBase.Columns("Master_Bedroom_Window_Back_North")
            Me.columnSydney_Bedroom_Window = MyBase.Columns("Sydney_Bedroom_Window")
            Me.columnEthan_Bedroom_Window = MyBase.Columns("Ethan_Bedroom_Window")
            Me.columnSpare_Bedroom_Window_North = MyBase.Columns("Spare_Bedroom_Window_North")
            Me.columnSpare_Bedroom_Window_South = MyBase.Columns("Spare_Bedroom_Window_South")
            Me.columnMailbox = MyBase.Columns("Mailbox")
            Me.columnBasement_Door = MyBase.Columns("Basement_Door")
            Me.columnBasement_Door_Lock = MyBase.Columns("Basement_Door_Lock")
            Me.columnBasement_Window_South = MyBase.Columns("Basement_Window_South")
            Me.columnBasement_Window_North = MyBase.Columns("Basement_Window_North")
            Me.columnBasement_Storage_Door = MyBase.Columns("Basement_Storage_Door")
            Me.columnServer_Room_Motion = MyBase.Columns("Server_Room_Motion")
            Me.columnUpstairs_Hallway_Motion = MyBase.Columns("Upstairs_Hallway_Motion")
            Me.columnGreat_Room_Motion = MyBase.Columns("Great_Room_Motion")
            Me.columnBasement_Motion = MyBase.Columns("Basement_Motion")
            Me.columnExterior_Motion = MyBase.Columns("Exterior_Motion")
            Me.columnDoorbell = MyBase.Columns("Doorbell")
            Me.columnTelephone = MyBase.Columns("Telephone")
            Me.columnCar_West = MyBase.Columns("Car_West")
            Me.columnCar_East = MyBase.Columns("Car_East")
            Me.columnHouse_Occupied = MyBase.Columns("House_Occupied")
            Me.columnBrine_Tank = MyBase.Columns("Brine_Tank")
            Me.columnLizard_Habitat_Temp = MyBase.Columns("Lizard_Habitat_Temp")
            Me.columnInternet_Link = MyBase.Columns("Internet_Link")
            Me.columnLizard_Fed = MyBase.Columns("Lizard_Fed")
            Me.columnStair_Lights = MyBase.Columns("Stair_Lights")
            Me.columnGeofence_Reached = MyBase.Columns("Geofence_Reached")
            Me.columnRoomba_Run = MyBase.Columns("Roomba_Run")
            Me.columnLeak_Detected = MyBase.Columns("Leak_Detected")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRow_ID = New Global.System.Data.DataColumn("Row_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRow_ID)
            Me.columnLast_Update = New Global.System.Data.DataColumn("Last_Update", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLast_Update)
            Me.columnGarage_Door = New Global.System.Data.DataColumn("Garage_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Door)
            Me.columnGarage_Window_South = New Global.System.Data.DataColumn("Garage_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Window_South)
            Me.columnGarage_Window_North = New Global.System.Data.DataColumn("Garage_Window_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Window_North)
            Me.columnGarage_Outside_Door = New Global.System.Data.DataColumn("Garage_Outside_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Outside_Door)
            Me.columnGarage_Outside_Door_Lock = New Global.System.Data.DataColumn("Garage_Outside_Door_Lock", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Outside_Door_Lock)
            Me.columnGarage_Inside_Door = New Global.System.Data.DataColumn("Garage_Inside_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Inside_Door)
            Me.columnGarage_Inside_Door_Lock = New Global.System.Data.DataColumn("Garage_Inside_Door_Lock", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarage_Inside_Door_Lock)
            Me.columnKitchen_Window = New Global.System.Data.DataColumn("Kitchen_Window", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKitchen_Window)
            Me.columnBack_Door = New Global.System.Data.DataColumn("Back_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBack_Door)
            Me.columnBack_Door_Lock = New Global.System.Data.DataColumn("Back_Door_Lock", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBack_Door_Lock)
            Me.columnGreat_Room_Window_South = New Global.System.Data.DataColumn("Great_Room_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGreat_Room_Window_South)
            Me.columnGreat_Room_Window_North = New Global.System.Data.DataColumn("Great_Room_Window_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGreat_Room_Window_North)
            Me.columnPlay_Room_Window_South = New Global.System.Data.DataColumn("Play_Room_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlay_Room_Window_South)
            Me.columnPlay_Room_window_North = New Global.System.Data.DataColumn("Play_Room_window_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlay_Room_window_North)
            Me.columnFamiy_Room_Window_South = New Global.System.Data.DataColumn("Famiy_Room_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamiy_Room_Window_South)
            Me.columnFamily_Room_Window_Front_South = New Global.System.Data.DataColumn("Family_Room_Window_Front_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamily_Room_Window_Front_South)
            Me.columnFamily_Room_Window_Front_Middle = New Global.System.Data.DataColumn("Family_Room_Window_Front_Middle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamily_Room_Window_Front_Middle)
            Me.columnFamily_Room_Window_Front_North = New Global.System.Data.DataColumn("Family_Room_Window_Front_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFamily_Room_Window_Front_North)
            Me.columnFront_Door = New Global.System.Data.DataColumn("Front_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFront_Door)
            Me.columnFront_Door_Lock = New Global.System.Data.DataColumn("Front_Door_Lock", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFront_Door_Lock)
            Me.columnDining_Room_Window_South = New Global.System.Data.DataColumn("Dining_Room_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDining_Room_Window_South)
            Me.columnDining_Room_Window_North = New Global.System.Data.DataColumn("Dining_Room_Window_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDining_Room_Window_North)
            Me.columnMaster_Bath_Window = New Global.System.Data.DataColumn("Master_Bath_Window", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaster_Bath_Window)
            Me.columnMaster_Bedroom_Window_South = New Global.System.Data.DataColumn("Master_Bedroom_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaster_Bedroom_Window_South)
            Me.columnMaster_Bedroom_Window_Back_South = New Global.System.Data.DataColumn("Master_Bedroom_Window_Back_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaster_Bedroom_Window_Back_South)
            Me.columnMaster_Bedroom_Window_Back_North = New Global.System.Data.DataColumn("Master_Bedroom_Window_Back_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaster_Bedroom_Window_Back_North)
            Me.columnSydney_Bedroom_Window = New Global.System.Data.DataColumn("Sydney_Bedroom_Window", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSydney_Bedroom_Window)
            Me.columnEthan_Bedroom_Window = New Global.System.Data.DataColumn("Ethan_Bedroom_Window", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEthan_Bedroom_Window)
            Me.columnSpare_Bedroom_Window_North = New Global.System.Data.DataColumn("Spare_Bedroom_Window_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpare_Bedroom_Window_North)
            Me.columnSpare_Bedroom_Window_South = New Global.System.Data.DataColumn("Spare_Bedroom_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpare_Bedroom_Window_South)
            Me.columnMailbox = New Global.System.Data.DataColumn("Mailbox", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMailbox)
            Me.columnBasement_Door = New Global.System.Data.DataColumn("Basement_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasement_Door)
            Me.columnBasement_Door_Lock = New Global.System.Data.DataColumn("Basement_Door_Lock", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasement_Door_Lock)
            Me.columnBasement_Window_South = New Global.System.Data.DataColumn("Basement_Window_South", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasement_Window_South)
            Me.columnBasement_Window_North = New Global.System.Data.DataColumn("Basement_Window_North", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasement_Window_North)
            Me.columnBasement_Storage_Door = New Global.System.Data.DataColumn("Basement_Storage_Door", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasement_Storage_Door)
            Me.columnServer_Room_Motion = New Global.System.Data.DataColumn("Server_Room_Motion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServer_Room_Motion)
            Me.columnUpstairs_Hallway_Motion = New Global.System.Data.DataColumn("Upstairs_Hallway_Motion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpstairs_Hallway_Motion)
            Me.columnGreat_Room_Motion = New Global.System.Data.DataColumn("Great_Room_Motion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGreat_Room_Motion)
            Me.columnBasement_Motion = New Global.System.Data.DataColumn("Basement_Motion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasement_Motion)
            Me.columnExterior_Motion = New Global.System.Data.DataColumn("Exterior_Motion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExterior_Motion)
            Me.columnDoorbell = New Global.System.Data.DataColumn("Doorbell", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDoorbell)
            Me.columnTelephone = New Global.System.Data.DataColumn("Telephone", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelephone)
            Me.columnCar_West = New Global.System.Data.DataColumn("Car_West", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCar_West)
            Me.columnCar_East = New Global.System.Data.DataColumn("Car_East", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCar_East)
            Me.columnHouse_Occupied = New Global.System.Data.DataColumn("House_Occupied", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHouse_Occupied)
            Me.columnBrine_Tank = New Global.System.Data.DataColumn("Brine_Tank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrine_Tank)
            Me.columnLizard_Habitat_Temp = New Global.System.Data.DataColumn("Lizard_Habitat_Temp", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLizard_Habitat_Temp)
            Me.columnInternet_Link = New Global.System.Data.DataColumn("Internet_Link", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternet_Link)
            Me.columnLizard_Fed = New Global.System.Data.DataColumn("Lizard_Fed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLizard_Fed)
            Me.columnStair_Lights = New Global.System.Data.DataColumn("Stair_Lights", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStair_Lights)
            Me.columnGeofence_Reached = New Global.System.Data.DataColumn("Geofence_Reached", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeofence_Reached)
            Me.columnRoomba_Run = New Global.System.Data.DataColumn("Roomba_Run", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomba_Run)
            Me.columnLeak_Detected = New Global.System.Data.DataColumn("Leak_Detected", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLeak_Detected)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLast_Update}, true))
            Me.columnRow_ID.AllowDBNull = false
            Me.columnLast_Update.AllowDBNull = false
            Me.columnLast_Update.Unique = true
            Me.columnGarage_Door.AllowDBNull = false
            Me.columnGarage_Window_South.AllowDBNull = false
            Me.columnGarage_Window_North.AllowDBNull = false
            Me.columnGarage_Outside_Door.AllowDBNull = false
            Me.columnGarage_Outside_Door_Lock.AllowDBNull = false
            Me.columnGarage_Inside_Door.AllowDBNull = false
            Me.columnGarage_Inside_Door_Lock.AllowDBNull = false
            Me.columnKitchen_Window.AllowDBNull = false
            Me.columnBack_Door.AllowDBNull = false
            Me.columnBack_Door_Lock.AllowDBNull = false
            Me.columnGreat_Room_Window_South.AllowDBNull = false
            Me.columnGreat_Room_Window_North.AllowDBNull = false
            Me.columnPlay_Room_Window_South.AllowDBNull = false
            Me.columnPlay_Room_window_North.AllowDBNull = false
            Me.columnFamiy_Room_Window_South.AllowDBNull = false
            Me.columnFamily_Room_Window_Front_South.AllowDBNull = false
            Me.columnFamily_Room_Window_Front_Middle.AllowDBNull = false
            Me.columnFamily_Room_Window_Front_North.AllowDBNull = false
            Me.columnFront_Door.AllowDBNull = false
            Me.columnFront_Door_Lock.AllowDBNull = false
            Me.columnDining_Room_Window_South.AllowDBNull = false
            Me.columnDining_Room_Window_North.AllowDBNull = false
            Me.columnMaster_Bath_Window.AllowDBNull = false
            Me.columnMaster_Bedroom_Window_South.AllowDBNull = false
            Me.columnMaster_Bedroom_Window_Back_South.AllowDBNull = false
            Me.columnMaster_Bedroom_Window_Back_North.AllowDBNull = false
            Me.columnSydney_Bedroom_Window.AllowDBNull = false
            Me.columnEthan_Bedroom_Window.AllowDBNull = false
            Me.columnSpare_Bedroom_Window_North.AllowDBNull = false
            Me.columnSpare_Bedroom_Window_South.AllowDBNull = false
            Me.columnMailbox.AllowDBNull = false
            Me.columnBasement_Door.AllowDBNull = false
            Me.columnBasement_Door_Lock.AllowDBNull = false
            Me.columnBasement_Window_South.AllowDBNull = false
            Me.columnBasement_Window_North.AllowDBNull = false
            Me.columnBasement_Storage_Door.AllowDBNull = false
            Me.columnServer_Room_Motion.AllowDBNull = false
            Me.columnUpstairs_Hallway_Motion.AllowDBNull = false
            Me.columnGreat_Room_Motion.AllowDBNull = false
            Me.columnBasement_Motion.AllowDBNull = false
            Me.columnExterior_Motion.AllowDBNull = false
            Me.columnDoorbell.AllowDBNull = false
            Me.columnTelephone.AllowDBNull = false
            Me.columnCar_West.AllowDBNull = false
            Me.columnCar_East.AllowDBNull = false
            Me.columnHouse_Occupied.AllowDBNull = false
            Me.columnBrine_Tank.AllowDBNull = false
            Me.columnLizard_Habitat_Temp.AllowDBNull = false
            Me.columnInternet_Link.AllowDBNull = false
            Me.columnLizard_Fed.AllowDBNull = false
            Me.columnStair_Lights.AllowDBNull = false
            Me.columnGeofence_Reached.AllowDBNull = false
            Me.columnRoomba_Run.AllowDBNull = false
            Me.columnLeak_Detected.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEvent_Current_StateRow() As Event_Current_StateRow
            Return CType(Me.NewRow,Event_Current_StateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Event_Current_StateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Event_Current_StateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Event_Current_StateRowChangedEvent) Is Nothing) Then
                RaiseEvent Event_Current_StateRowChanged(Me, New Event_Current_StateRowChangeEvent(CType(e.Row,Event_Current_StateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Event_Current_StateRowChangingEvent) Is Nothing) Then
                RaiseEvent Event_Current_StateRowChanging(Me, New Event_Current_StateRowChangeEvent(CType(e.Row,Event_Current_StateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Event_Current_StateRowDeletedEvent) Is Nothing) Then
                RaiseEvent Event_Current_StateRowDeleted(Me, New Event_Current_StateRowChangeEvent(CType(e.Row,Event_Current_StateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Event_Current_StateRowDeletingEvent) Is Nothing) Then
                RaiseEvent Event_Current_StateRowDeleting(Me, New Event_Current_StateRowChangeEvent(CType(e.Row,Event_Current_StateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEvent_Current_StateRow(ByVal row As Event_Current_StateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As WatchdogDataSet1 = New WatchdogDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Event_Current_StateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Water_Usage_HistoryDataTable
        Inherits Global.System.Data.TypedTableBase(Of Water_Usage_HistoryRow)
        
        Private columnEvent_Timestamp As Global.System.Data.DataColumn
        
        Private columnGallons_Used As Global.System.Data.DataColumn
        
        Private columnIrrigation_gallons As Global.System.Data.DataColumn
        
        Private columnIrrigation_code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Water_Usage_History"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Event_TimestampColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent_Timestamp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Gallons_UsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGallons_Used
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Irrigation_gallonsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIrrigation_gallons
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Irrigation_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIrrigation_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Water_Usage_HistoryRow
            Get
                Return CType(Me.Rows(index),Water_Usage_HistoryRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Water_Usage_HistoryRowChanging As Water_Usage_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Water_Usage_HistoryRowChanged As Water_Usage_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Water_Usage_HistoryRowDeleting As Water_Usage_HistoryRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Water_Usage_HistoryRowDeleted As Water_Usage_HistoryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddWater_Usage_HistoryRow(ByVal row As Water_Usage_HistoryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddWater_Usage_HistoryRow(ByVal Event_Timestamp As Date, ByVal Gallons_Used As Integer, ByVal Irrigation_gallons As Integer, ByVal Irrigation_code As String) As Water_Usage_HistoryRow
            Dim rowWater_Usage_HistoryRow As Water_Usage_HistoryRow = CType(Me.NewRow,Water_Usage_HistoryRow)
            Dim columnValuesArray() As Object = New Object() {Event_Timestamp, Gallons_Used, Irrigation_gallons, Irrigation_code}
            rowWater_Usage_HistoryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWater_Usage_HistoryRow)
            Return rowWater_Usage_HistoryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Water_Usage_HistoryDataTable = CType(MyBase.Clone,Water_Usage_HistoryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Water_Usage_HistoryDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEvent_Timestamp = MyBase.Columns("Event_Timestamp")
            Me.columnGallons_Used = MyBase.Columns("Gallons_Used")
            Me.columnIrrigation_gallons = MyBase.Columns("Irrigation_gallons")
            Me.columnIrrigation_code = MyBase.Columns("Irrigation_code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEvent_Timestamp = New Global.System.Data.DataColumn("Event_Timestamp", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvent_Timestamp)
            Me.columnGallons_Used = New Global.System.Data.DataColumn("Gallons_Used", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGallons_Used)
            Me.columnIrrigation_gallons = New Global.System.Data.DataColumn("Irrigation_gallons", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIrrigation_gallons)
            Me.columnIrrigation_code = New Global.System.Data.DataColumn("Irrigation_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIrrigation_code)
            Me.columnEvent_Timestamp.AllowDBNull = false
            Me.columnGallons_Used.AllowDBNull = false
            Me.columnIrrigation_gallons.AllowDBNull = false
            Me.columnIrrigation_code.AllowDBNull = false
            Me.columnIrrigation_code.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewWater_Usage_HistoryRow() As Water_Usage_HistoryRow
            Return CType(Me.NewRow,Water_Usage_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Water_Usage_HistoryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Water_Usage_HistoryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Water_Usage_HistoryRowChangedEvent) Is Nothing) Then
                RaiseEvent Water_Usage_HistoryRowChanged(Me, New Water_Usage_HistoryRowChangeEvent(CType(e.Row,Water_Usage_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Water_Usage_HistoryRowChangingEvent) Is Nothing) Then
                RaiseEvent Water_Usage_HistoryRowChanging(Me, New Water_Usage_HistoryRowChangeEvent(CType(e.Row,Water_Usage_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Water_Usage_HistoryRowDeletedEvent) Is Nothing) Then
                RaiseEvent Water_Usage_HistoryRowDeleted(Me, New Water_Usage_HistoryRowChangeEvent(CType(e.Row,Water_Usage_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Water_Usage_HistoryRowDeletingEvent) Is Nothing) Then
                RaiseEvent Water_Usage_HistoryRowDeleting(Me, New Water_Usage_HistoryRowChangeEvent(CType(e.Row,Water_Usage_HistoryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveWater_Usage_HistoryRow(ByVal row As Water_Usage_HistoryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As WatchdogDataSet1 = New WatchdogDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Water_Usage_HistoryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Event_HistoryRow
        Inherits Global.System.Data.DataRow
        
        Private tableEvent_History As Event_HistoryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEvent_History = CType(Me.Table,Event_HistoryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Event_ID() As String
            Get
                Return CType(Me(Me.tableEvent_History.Event_IDColumn),String)
            End Get
            Set
                Me(Me.tableEvent_History.Event_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Event_Timestamp() As Date
            Get
                Return CType(Me(Me.tableEvent_History.Event_TimestampColumn),Date)
            End Get
            Set
                Me(Me.tableEvent_History.Event_TimestampColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Irrigation_HistoryRow
        Inherits Global.System.Data.DataRow
        
        Private tableIrrigation_History As Irrigation_HistoryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIrrigation_History = CType(Me.Table,Irrigation_HistoryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Event_ID() As String
            Get
                Return CType(Me(Me.tableIrrigation_History.Event_IDColumn),String)
            End Get
            Set
                Me(Me.tableIrrigation_History.Event_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Event_Timestamp() As Date
            Get
                Return CType(Me(Me.tableIrrigation_History.Event_TimestampColumn),Date)
            End Get
            Set
                Me(Me.tableIrrigation_History.Event_TimestampColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Irrigation_ControlRow
        Inherits Global.System.Data.DataRow
        
        Private tableIrrigation_Control As Irrigation_ControlDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIrrigation_Control = CType(Me.Table,Irrigation_ControlDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zone_ID() As Integer
            Get
                Return CType(Me(Me.tableIrrigation_Control.Zone_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableIrrigation_Control.Zone_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zone_Name() As String
            Get
                Return CType(Me(Me.tableIrrigation_Control.Zone_NameColumn),String)
            End Get
            Set
                Me(Me.tableIrrigation_Control.Zone_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zone_Current_State() As Integer
            Get
                Return CType(Me(Me.tableIrrigation_Control.Zone_Current_StateColumn),Integer)
            End Get
            Set
                Me(Me.tableIrrigation_Control.Zone_Current_StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Zone_Request_State() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIrrigation_Control.Zone_Request_StateColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Zone_Request_State' in table 'Irrigation_Control' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableIrrigation_Control.Zone_Request_StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZone_Request_StateNull() As Boolean
            Return Me.IsNull(Me.tableIrrigation_Control.Zone_Request_StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZone_Request_StateNull()
            Me(Me.tableIrrigation_Control.Zone_Request_StateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Event_Current_StateRow
        Inherits Global.System.Data.DataRow
        
        Private tableEvent_Current_State As Event_Current_StateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEvent_Current_State = CType(Me.Table,Event_Current_StateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Row_ID() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Row_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Row_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Last_Update() As Date
            Get
                Return CType(Me(Me.tableEvent_Current_State.Last_UpdateColumn),Date)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Last_UpdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Window_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_Window_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_Window_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Outside_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_Outside_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_Outside_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Outside_Door_Lock() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_Outside_Door_LockColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_Outside_Door_LockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Inside_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_Inside_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_Inside_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Garage_Inside_Door_Lock() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Garage_Inside_Door_LockColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Garage_Inside_Door_LockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Kitchen_Window() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Kitchen_WindowColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Kitchen_WindowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Back_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Back_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Back_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Back_Door_Lock() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Back_Door_LockColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Back_Door_LockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Great_Room_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Great_Room_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Great_Room_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Great_Room_Window_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Great_Room_Window_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Great_Room_Window_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Play_Room_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Play_Room_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Play_Room_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Play_Room_window_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Play_Room_window_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Play_Room_window_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Famiy_Room_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Famiy_Room_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Famiy_Room_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Family_Room_Window_Front_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Family_Room_Window_Front_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Family_Room_Window_Front_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Family_Room_Window_Front_Middle() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Family_Room_Window_Front_MiddleColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Family_Room_Window_Front_MiddleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Family_Room_Window_Front_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Family_Room_Window_Front_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Family_Room_Window_Front_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Front_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Front_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Front_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Front_Door_Lock() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Front_Door_LockColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Front_Door_LockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dining_Room_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Dining_Room_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Dining_Room_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dining_Room_Window_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Dining_Room_Window_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Dining_Room_Window_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Master_Bath_Window() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Master_Bath_WindowColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Master_Bath_WindowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Master_Bedroom_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Master_Bedroom_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Master_Bedroom_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Master_Bedroom_Window_Back_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Master_Bedroom_Window_Back_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Master_Bedroom_Window_Back_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Master_Bedroom_Window_Back_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Master_Bedroom_Window_Back_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Master_Bedroom_Window_Back_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sydney_Bedroom_Window() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Sydney_Bedroom_WindowColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Sydney_Bedroom_WindowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ethan_Bedroom_Window() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Ethan_Bedroom_WindowColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Ethan_Bedroom_WindowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Spare_Bedroom_Window_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Spare_Bedroom_Window_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Spare_Bedroom_Window_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Spare_Bedroom_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Spare_Bedroom_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Spare_Bedroom_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mailbox() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.MailboxColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.MailboxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basement_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Basement_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Basement_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basement_Door_Lock() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Basement_Door_LockColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Basement_Door_LockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basement_Window_South() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Basement_Window_SouthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Basement_Window_SouthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basement_Window_North() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Basement_Window_NorthColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Basement_Window_NorthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basement_Storage_Door() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Basement_Storage_DoorColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Basement_Storage_DoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Server_Room_Motion() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Server_Room_MotionColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Server_Room_MotionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Upstairs_Hallway_Motion() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Upstairs_Hallway_MotionColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Upstairs_Hallway_MotionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Great_Room_Motion() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Great_Room_MotionColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Great_Room_MotionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basement_Motion() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Basement_MotionColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Basement_MotionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Exterior_Motion() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Exterior_MotionColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Exterior_MotionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Doorbell() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.DoorbellColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.DoorbellColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Telephone() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.TelephoneColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.TelephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Car_West() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Car_WestColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Car_WestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Car_East() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Car_EastColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Car_EastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property House_Occupied() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.House_OccupiedColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.House_OccupiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Brine_Tank() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Brine_TankColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Brine_TankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Lizard_Habitat_Temp() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Lizard_Habitat_TempColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Lizard_Habitat_TempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Internet_Link() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Internet_LinkColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Internet_LinkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Lizard_Fed() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Lizard_FedColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Lizard_FedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Stair_Lights() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Stair_LightsColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Stair_LightsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Geofence_Reached() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Geofence_ReachedColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Geofence_ReachedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Roomba_Run() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Roomba_RunColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Roomba_RunColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Leak_Detected() As Integer
            Get
                Return CType(Me(Me.tableEvent_Current_State.Leak_DetectedColumn),Integer)
            End Get
            Set
                Me(Me.tableEvent_Current_State.Leak_DetectedColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Water_Usage_HistoryRow
        Inherits Global.System.Data.DataRow
        
        Private tableWater_Usage_History As Water_Usage_HistoryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWater_Usage_History = CType(Me.Table,Water_Usage_HistoryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Event_Timestamp() As Date
            Get
                Return CType(Me(Me.tableWater_Usage_History.Event_TimestampColumn),Date)
            End Get
            Set
                Me(Me.tableWater_Usage_History.Event_TimestampColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Gallons_Used() As Integer
            Get
                Return CType(Me(Me.tableWater_Usage_History.Gallons_UsedColumn),Integer)
            End Get
            Set
                Me(Me.tableWater_Usage_History.Gallons_UsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Irrigation_gallons() As Integer
            Get
                Return CType(Me(Me.tableWater_Usage_History.Irrigation_gallonsColumn),Integer)
            End Get
            Set
                Me(Me.tableWater_Usage_History.Irrigation_gallonsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Irrigation_code() As String
            Get
                Return CType(Me(Me.tableWater_Usage_History.Irrigation_codeColumn),String)
            End Get
            Set
                Me(Me.tableWater_Usage_History.Irrigation_codeColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Event_HistoryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Event_HistoryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Event_HistoryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Event_HistoryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Irrigation_HistoryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Irrigation_HistoryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Irrigation_HistoryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Irrigation_HistoryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Irrigation_ControlRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Irrigation_ControlRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Irrigation_ControlRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Irrigation_ControlRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Event_Current_StateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Event_Current_StateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Event_Current_StateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Event_Current_StateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Water_Usage_HistoryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Water_Usage_HistoryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Water_Usage_HistoryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Water_Usage_HistoryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace WatchdogDataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Event_HistoryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Event_History"
            tableMapping.ColumnMappings.Add("Event_ID", "Event_ID")
            tableMapping.ColumnMappings.Add("Event_Timestamp", "Event_Timestamp")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Event_History] ([Event_ID], [Event_Timestamp]) VALUES (@Event_"& _ 
                "ID, @Event_Timestamp)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_ID", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.WatchdogConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Event_ID, Event_Timestamp FROM dbo.Event_History"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO [dbo].[Event_History] ([Event_ID], [Event_Timestamp]) VALUES (@Event_"& _ 
                "ID, CURRENT_TIMESTAMP)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_ID", Global.System.Data.SqlDbType.NChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As WatchdogDataSet1.Event_HistoryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As WatchdogDataSet1.Event_HistoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As WatchdogDataSet1.Event_HistoryDataTable = New WatchdogDataSet1.Event_HistoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As WatchdogDataSet1.Event_HistoryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As WatchdogDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "Event_History")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Event_ID As String, ByVal Event_Timestamp As Date) As Integer
            If (Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Event_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Event_ID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Event_Timestamp,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal Event_ID As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Event_ID")
            Else
                command.Parameters(0).Value = CType(Event_ID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Irrigation_HistoryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Irrigation_History"
            tableMapping.ColumnMappings.Add("Event_ID", "Event_ID")
            tableMapping.ColumnMappings.Add("Event_Timestamp", "Event_Timestamp")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Irrigation_History] WHERE (([Event_ID] = @Original_Event_ID) A"& _ 
                "ND ([Event_Timestamp] = @Original_Event_Timestamp))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Event_ID", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Irrigation_History] ([Event_ID], [Event_Timestamp]) VALUES (@E"& _ 
                "vent_ID, @Event_Timestamp);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Event_ID, Event_Timestamp FROM Irrigation_Hi"& _ 
                "story WHERE (Event_ID = @Event_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_ID", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Irrigation_History] SET [Event_ID] = @Event_ID, [Event_Timestamp] ="& _ 
                " @Event_Timestamp WHERE (([Event_ID] = @Original_Event_ID) AND ([Event_Timestamp"& _ 
                "] = @Original_Event_Timestamp));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Event_ID, Event_Timestamp FROM Irrigati"& _ 
                "on_History WHERE (Event_ID = @Event_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_ID", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Event_ID", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.WatchdogConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Event_ID, Event_Timestamp FROM dbo.Irrigation_History"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO [dbo].[Irrigation_History] ([Event_ID], [Event_Timestamp]) VALUES (@E"& _ 
                "vent_ID, CURRENT_TIMESTAMP);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_ID", Global.System.Data.SqlDbType.NChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Irrigation_History"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE       "& _ 
                " (Event_ID = '310') AND (Event_Timestamp >= DATEADD(day, - 2, CURRENT_TIMESTAMP)"& _ 
                ")"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As WatchdogDataSet1.Irrigation_HistoryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As WatchdogDataSet1.Irrigation_HistoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As WatchdogDataSet1.Irrigation_HistoryDataTable = New WatchdogDataSet1.Irrigation_HistoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As WatchdogDataSet1.Irrigation_HistoryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As WatchdogDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "Irrigation_History")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Event_ID As String, ByVal Original_Event_Timestamp As Date) As Integer
            If (Original_Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Event_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Event_ID,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Event_Timestamp,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Event_ID As String, ByVal Event_Timestamp As Date) As Integer
            If (Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Event_ID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Event_ID,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Event_Timestamp,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Event_ID As String, ByVal Event_Timestamp As Date, ByVal Original_Event_ID As String, ByVal Original_Event_Timestamp As Date) As Integer
            If (Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Event_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Event_ID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Event_Timestamp,Date)
            If (Original_Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Event_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Event_ID,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Event_Timestamp,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Event_Timestamp As Date, ByVal Original_Event_ID As String, ByVal Original_Event_Timestamp As Date) As Integer
            Return Me.Update(Original_Event_ID, Event_Timestamp, Original_Event_ID, Original_Event_Timestamp)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal Event_ID As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (Event_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Event_ID")
            Else
                command.Parameters(0).Value = CType(Event_ID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function WetLast2Days() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Irrigation_ControlTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Irrigation_Control"
            tableMapping.ColumnMappings.Add("Zone_ID", "Zone_ID")
            tableMapping.ColumnMappings.Add("Zone_Name", "Zone_Name")
            tableMapping.ColumnMappings.Add("Zone_Current_State", "Zone_Current_State")
            tableMapping.ColumnMappings.Add("Zone_Request_State", "Zone_Request_State")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Irrigation_Control] ([Zone_ID], [Zone_Name], [Zone_Current_Sta"& _ 
                "te], [Zone_Request_State]) VALUES (@Zone_ID, @Zone_Name, @Zone_Current_State, @Z"& _ 
                "one_Request_State)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zone_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zone_Name", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zone_Current_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_Current_State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zone_Request_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_Request_State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.WatchdogConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Zone_ID, Zone_Name, Zone_Current_State, Zone_Request_State FROM dbo.Irriga"& _ 
                "tion_Control"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Zone_ID, Zone_Name, Zone_Current_State, Zone_Request_State "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM dbo.Irri"& _ 
                "gation_Control"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Zone_Current_State = 1 and Zone_ID <> 0"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Zone_ID, Zone_Name, Zone_Current_State, Zone_Request_State "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM dbo.Irri"& _ 
                "gation_Control"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Zone_Request_State IS NOT NULL"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       Irrigation_Control"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Zone_Request_State = @ZoneReq"& _ 
                "uestState"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Zone_ID = @ZoneID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZoneRequestState", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_Request_State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZoneID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       Irrigation_Control"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Zone_Request_State = NULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WH"& _ 
                "ERE        (Zone_Request_State IS NOT NULL)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "UPDATE       Irrigation_Control"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Zone_Current_State = @ZoneCur"& _ 
                "rentState"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Zone_ID = @ZoneID)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZoneCurrentState", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_Current_State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZoneID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Zone_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As WatchdogDataSet1.Irrigation_ControlDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As WatchdogDataSet1.Irrigation_ControlDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As WatchdogDataSet1.Irrigation_ControlDataTable = New WatchdogDataSet1.Irrigation_ControlDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function Get_Active_Zones() As WatchdogDataSet1.Irrigation_ControlDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As WatchdogDataSet1.Irrigation_ControlDataTable = New WatchdogDataSet1.Irrigation_ControlDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function Get_New_Requests() As WatchdogDataSet1.Irrigation_ControlDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As WatchdogDataSet1.Irrigation_ControlDataTable = New WatchdogDataSet1.Irrigation_ControlDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As WatchdogDataSet1.Irrigation_ControlDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As WatchdogDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "Irrigation_Control")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Zone_ID As Integer, ByVal Zone_Name As String, ByVal Zone_Current_State As Integer, ByVal Zone_Request_State As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Zone_ID,Integer)
            If (Zone_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Zone_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Zone_Name,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Zone_Current_State,Integer)
            If (Zone_Request_State.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Zone_Request_State.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function Request_State_Change(ByVal ZoneRequestState As Global.System.Nullable(Of Integer), ByVal ZoneID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (ZoneRequestState.HasValue = true) Then
                command.Parameters(0).Value = CType(ZoneRequestState.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(ZoneID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function Reset_New_Requests() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function Update_Current_State(ByVal ZoneCurrentState As Integer, ByVal ZoneID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            command.Parameters(0).Value = CType(ZoneCurrentState,Integer)
            command.Parameters(1).Value = CType(ZoneID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Event_Current_StateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Event_Current_State"
            tableMapping.ColumnMappings.Add("Row_ID", "Row_ID")
            tableMapping.ColumnMappings.Add("Last_Update", "Last_Update")
            tableMapping.ColumnMappings.Add("Garage_Door", "Garage_Door")
            tableMapping.ColumnMappings.Add("Garage_Window_South", "Garage_Window_South")
            tableMapping.ColumnMappings.Add("Garage_Window_North", "Garage_Window_North")
            tableMapping.ColumnMappings.Add("Garage_Outside_Door", "Garage_Outside_Door")
            tableMapping.ColumnMappings.Add("Garage_Outside_Door_Lock", "Garage_Outside_Door_Lock")
            tableMapping.ColumnMappings.Add("Garage_Inside_Door", "Garage_Inside_Door")
            tableMapping.ColumnMappings.Add("Garage_Inside_Door_Lock", "Garage_Inside_Door_Lock")
            tableMapping.ColumnMappings.Add("Kitchen_Window", "Kitchen_Window")
            tableMapping.ColumnMappings.Add("Back_Door", "Back_Door")
            tableMapping.ColumnMappings.Add("Back_Door_Lock", "Back_Door_Lock")
            tableMapping.ColumnMappings.Add("Great_Room_Window_South", "Great_Room_Window_South")
            tableMapping.ColumnMappings.Add("Great_Room_Window_North", "Great_Room_Window_North")
            tableMapping.ColumnMappings.Add("Play_Room_Window_South", "Play_Room_Window_South")
            tableMapping.ColumnMappings.Add("Play_Room_window_North", "Play_Room_window_North")
            tableMapping.ColumnMappings.Add("Famiy_Room_Window_South", "Famiy_Room_Window_South")
            tableMapping.ColumnMappings.Add("Family_Room_Window_Front_South", "Family_Room_Window_Front_South")
            tableMapping.ColumnMappings.Add("Family_Room_Window_Front_Middle", "Family_Room_Window_Front_Middle")
            tableMapping.ColumnMappings.Add("Family_Room_Window_Front_North", "Family_Room_Window_Front_North")
            tableMapping.ColumnMappings.Add("Front_Door", "Front_Door")
            tableMapping.ColumnMappings.Add("Front_Door_Lock", "Front_Door_Lock")
            tableMapping.ColumnMappings.Add("Dining_Room_Window_South", "Dining_Room_Window_South")
            tableMapping.ColumnMappings.Add("Dining_Room_Window_North", "Dining_Room_Window_North")
            tableMapping.ColumnMappings.Add("Master_Bath_Window", "Master_Bath_Window")
            tableMapping.ColumnMappings.Add("Master_Bedroom_Window_South", "Master_Bedroom_Window_South")
            tableMapping.ColumnMappings.Add("Master_Bedroom_Window_Back_South", "Master_Bedroom_Window_Back_South")
            tableMapping.ColumnMappings.Add("Master_Bedroom_Window_Back_North", "Master_Bedroom_Window_Back_North")
            tableMapping.ColumnMappings.Add("Sydney_Bedroom_Window", "Sydney_Bedroom_Window")
            tableMapping.ColumnMappings.Add("Ethan_Bedroom_Window", "Ethan_Bedroom_Window")
            tableMapping.ColumnMappings.Add("Spare_Bedroom_Window_North", "Spare_Bedroom_Window_North")
            tableMapping.ColumnMappings.Add("Spare_Bedroom_Window_South", "Spare_Bedroom_Window_South")
            tableMapping.ColumnMappings.Add("Mailbox", "Mailbox")
            tableMapping.ColumnMappings.Add("Basement_Door", "Basement_Door")
            tableMapping.ColumnMappings.Add("Basement_Door_Lock", "Basement_Door_Lock")
            tableMapping.ColumnMappings.Add("Basement_Window_South", "Basement_Window_South")
            tableMapping.ColumnMappings.Add("Basement_Window_North", "Basement_Window_North")
            tableMapping.ColumnMappings.Add("Basement_Storage_Door", "Basement_Storage_Door")
            tableMapping.ColumnMappings.Add("Server_Room_Motion", "Server_Room_Motion")
            tableMapping.ColumnMappings.Add("Upstairs_Hallway_Motion", "Upstairs_Hallway_Motion")
            tableMapping.ColumnMappings.Add("Great_Room_Motion", "Great_Room_Motion")
            tableMapping.ColumnMappings.Add("Basement_Motion", "Basement_Motion")
            tableMapping.ColumnMappings.Add("Exterior_Motion", "Exterior_Motion")
            tableMapping.ColumnMappings.Add("Doorbell", "Doorbell")
            tableMapping.ColumnMappings.Add("Telephone", "Telephone")
            tableMapping.ColumnMappings.Add("Car_West", "Car_West")
            tableMapping.ColumnMappings.Add("Car_East", "Car_East")
            tableMapping.ColumnMappings.Add("House_Occupied", "House_Occupied")
            tableMapping.ColumnMappings.Add("Brine_Tank", "Brine_Tank")
            tableMapping.ColumnMappings.Add("Lizard_Habitat_Temp", "Lizard_Habitat_Temp")
            tableMapping.ColumnMappings.Add("Internet_Link", "Internet_Link")
            tableMapping.ColumnMappings.Add("Lizard_Fed", "Lizard_Fed")
            tableMapping.ColumnMappings.Add("Stair_Lights", "Stair_Lights")
            tableMapping.ColumnMappings.Add("Geofence_Reached", "Geofence_Reached")
            tableMapping.ColumnMappings.Add("Roomba_Run", "Roomba_Run")
            tableMapping.ColumnMappings.Add("Leak_Detected", "Leak_Detected")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Event_Current_State] WHERE (([Row_ID] = @Original_Row_ID) AND "& _ 
                "([Last_Update] = @Original_Last_Update) AND ([Garage_Door] = @Original_Garage_Do"& _ 
                "or) AND ([Garage_Window_South] = @Original_Garage_Window_South) AND ([Garage_Win"& _ 
                "dow_North] = @Original_Garage_Window_North) AND ([Garage_Outside_Door] = @Origin"& _ 
                "al_Garage_Outside_Door) AND ([Garage_Outside_Door_Lock] = @Original_Garage_Outsi"& _ 
                "de_Door_Lock) AND ([Garage_Inside_Door] = @Original_Garage_Inside_Door) AND ([Ga"& _ 
                "rage_Inside_Door_Lock] = @Original_Garage_Inside_Door_Lock) AND ([Kitchen_Window"& _ 
                "] = @Original_Kitchen_Window) AND ([Back_Door] = @Original_Back_Door) AND ([Back"& _ 
                "_Door_Lock] = @Original_Back_Door_Lock) AND ([Great_Room_Window_South] = @Origin"& _ 
                "al_Great_Room_Window_South) AND ([Great_Room_Window_North] = @Original_Great_Roo"& _ 
                "m_Window_North) AND ([Play_Room_Window_South] = @Original_Play_Room_Window_South"& _ 
                ") AND ([Play_Room_window_North] = @Original_Play_Room_window_North) AND ([Famiy_"& _ 
                "Room_Window_South] = @Original_Famiy_Room_Window_South) AND ([Family_Room_Window"& _ 
                "_Front_South] = @Original_Family_Room_Window_Front_South) AND ([Family_Room_Wind"& _ 
                "ow_Front_Middle] = @Original_Family_Room_Window_Front_Middle) AND ([Family_Room_"& _ 
                "Window_Front_North] = @Original_Family_Room_Window_Front_North) AND ([Front_Door"& _ 
                "] = @Original_Front_Door) AND ([Front_Door_Lock] = @Original_Front_Door_Lock) AN"& _ 
                "D ([Dining_Room_Window_South] = @Original_Dining_Room_Window_South) AND ([Dining"& _ 
                "_Room_Window_North] = @Original_Dining_Room_Window_North) AND ([Master_Bath_Wind"& _ 
                "ow] = @Original_Master_Bath_Window) AND ([Master_Bedroom_Window_South] = @Origin"& _ 
                "al_Master_Bedroom_Window_South) AND ([Master_Bedroom_Window_Back_South] = @Origi"& _ 
                "nal_Master_Bedroom_Window_Back_South) AND ([Master_Bedroom_Window_Back_North] = "& _ 
                "@Original_Master_Bedroom_Window_Back_North) AND ([Sydney_Bedroom_Window] = @Orig"& _ 
                "inal_Sydney_Bedroom_Window) AND ([Ethan_Bedroom_Window] = @Original_Ethan_Bedroo"& _ 
                "m_Window) AND ([Spare_Bedroom_Window_North] = @Original_Spare_Bedroom_Window_Nor"& _ 
                "th) AND ([Spare_Bedroom_Window_South] = @Original_Spare_Bedroom_Window_South) AN"& _ 
                "D ([Mailbox] = @Original_Mailbox) AND ([Basement_Door] = @Original_Basement_Door"& _ 
                ") AND ([Basement_Door_Lock] = @Original_Basement_Door_Lock) AND ([Basement_Windo"& _ 
                "w_South] = @Original_Basement_Window_South) AND ([Basement_Window_North] = @Orig"& _ 
                "inal_Basement_Window_North) AND ([Basement_Storage_Door] = @Original_Basement_St"& _ 
                "orage_Door) AND ([Server_Room_Motion] = @Original_Server_Room_Motion) AND ([Upst"& _ 
                "airs_Hallway_Motion] = @Original_Upstairs_Hallway_Motion) AND ([Great_Room_Motio"& _ 
                "n] = @Original_Great_Room_Motion) AND ([Basement_Motion] = @Original_Basement_Mo"& _ 
                "tion) AND ([Exterior_Motion] = @Original_Exterior_Motion) AND ([Doorbell] = @Ori"& _ 
                "ginal_Doorbell) AND ([Telephone] = @Original_Telephone) AND ([Car_West] = @Origi"& _ 
                "nal_Car_West) AND ([Car_East] = @Original_Car_East) AND ([House_Occupied] = @Ori"& _ 
                "ginal_House_Occupied) AND ([Brine_Tank] = @Original_Brine_Tank) AND ([Lizard_Hab"& _ 
                "itat_Temp] = @Original_Lizard_Habitat_Temp) AND ([Internet_Link] = @Original_Int"& _ 
                "ernet_Link) AND ([Lizard_Fed] = @Original_Lizard_Fed) AND ([Stair_Lights] = @Ori"& _ 
                "ginal_Stair_Lights) AND ([Geofence_Reached] = @Original_Geofence_Reached) AND (["& _ 
                "Roomba_Run] = @Original_Roomba_Run) AND ([Leak_Detected] = @Original_Leak_Detect"& _ 
                "ed))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Row_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Row_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Last_Update", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Last_Update", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Outside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Outside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Inside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Inside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Kitchen_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kitchen_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Back_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Back_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Great_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Great_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Play_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Play_Room_window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Famiy_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Famiy_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Family_Room_Window_Front_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Family_Room_Window_Front_Middle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_Middle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Family_Room_Window_Front_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Front_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Front_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Dining_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Dining_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bath_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bath_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bedroom_Window_Back_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bedroom_Window_Back_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sydney_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sydney_Bedroom_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ethan_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ethan_Bedroom_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Spare_Bedroom_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Spare_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mailbox", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mailbox", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Storage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Storage_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Server_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Server_Room_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upstairs_Hallway_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upstairs_Hallway_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Great_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Exterior_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exterior_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Doorbell", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Doorbell", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telephone", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Car_West", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_West", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Car_East", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_East", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_House_Occupied", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "House_Occupied", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Brine_Tank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brine_Tank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Lizard_Habitat_Temp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Habitat_Temp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Internet_Link", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Internet_Link", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Lizard_Fed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Fed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stair_Lights", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stair_Lights", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Geofence_Reached", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geofence_Reached", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Roomba_Run", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Roomba_Run", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Leak_Detected", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Leak_Detected", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Event_Current_State] ([Row_ID], [Last_Update], [Garage_Door], "& _ 
                "[Garage_Window_South], [Garage_Window_North], [Garage_Outside_Door], [Garage_Out"& _ 
                "side_Door_Lock], [Garage_Inside_Door], [Garage_Inside_Door_Lock], [Kitchen_Windo"& _ 
                "w], [Back_Door], [Back_Door_Lock], [Great_Room_Window_South], [Great_Room_Window"& _ 
                "_North], [Play_Room_Window_South], [Play_Room_window_North], [Famiy_Room_Window_"& _ 
                "South], [Family_Room_Window_Front_South], [Family_Room_Window_Front_Middle], [Fa"& _ 
                "mily_Room_Window_Front_North], [Front_Door], [Front_Door_Lock], [Dining_Room_Win"& _ 
                "dow_South], [Dining_Room_Window_North], [Master_Bath_Window], [Master_Bedroom_Wi"& _ 
                "ndow_South], [Master_Bedroom_Window_Back_South], [Master_Bedroom_Window_Back_Nor"& _ 
                "th], [Sydney_Bedroom_Window], [Ethan_Bedroom_Window], [Spare_Bedroom_Window_Nort"& _ 
                "h], [Spare_Bedroom_Window_South], [Mailbox], [Basement_Door], [Basement_Door_Loc"& _ 
                "k], [Basement_Window_South], [Basement_Window_North], [Basement_Storage_Door], ["& _ 
                "Server_Room_Motion], [Upstairs_Hallway_Motion], [Great_Room_Motion], [Basement_M"& _ 
                "otion], [Exterior_Motion], [Doorbell], [Telephone], [Car_West], [Car_East], [Hou"& _ 
                "se_Occupied], [Brine_Tank], [Lizard_Habitat_Temp], [Internet_Link], [Lizard_Fed]"& _ 
                ", [Stair_Lights], [Geofence_Reached], [Roomba_Run], [Leak_Detected]) VALUES (@Ro"& _ 
                "w_ID, @Last_Update, @Garage_Door, @Garage_Window_South, @Garage_Window_North, @G"& _ 
                "arage_Outside_Door, @Garage_Outside_Door_Lock, @Garage_Inside_Door, @Garage_Insi"& _ 
                "de_Door_Lock, @Kitchen_Window, @Back_Door, @Back_Door_Lock, @Great_Room_Window_S"& _ 
                "outh, @Great_Room_Window_North, @Play_Room_Window_South, @Play_Room_window_North"& _ 
                ", @Famiy_Room_Window_South, @Family_Room_Window_Front_South, @Family_Room_Window"& _ 
                "_Front_Middle, @Family_Room_Window_Front_North, @Front_Door, @Front_Door_Lock, @"& _ 
                "Dining_Room_Window_South, @Dining_Room_Window_North, @Master_Bath_Window, @Maste"& _ 
                "r_Bedroom_Window_South, @Master_Bedroom_Window_Back_South, @Master_Bedroom_Windo"& _ 
                "w_Back_North, @Sydney_Bedroom_Window, @Ethan_Bedroom_Window, @Spare_Bedroom_Wind"& _ 
                "ow_North, @Spare_Bedroom_Window_South, @Mailbox, @Basement_Door, @Basement_Door_"& _ 
                "Lock, @Basement_Window_South, @Basement_Window_North, @Basement_Storage_Door, @S"& _ 
                "erver_Room_Motion, @Upstairs_Hallway_Motion, @Great_Room_Motion, @Basement_Motio"& _ 
                "n, @Exterior_Motion, @Doorbell, @Telephone, @Car_West, @Car_East, @House_Occupie"& _ 
                "d, @Brine_Tank, @Lizard_Habitat_Temp, @Internet_Link, @Lizard_Fed, @Stair_Lights"& _ 
                ", @Geofence_Reached, @Roomba_Run, @Leak_Detected);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Row_ID, Last_Update, "& _ 
                "Garage_Door, Garage_Window_South, Garage_Window_North, Garage_Outside_Door, Gara"& _ 
                "ge_Outside_Door_Lock, Garage_Inside_Door, Garage_Inside_Door_Lock, Kitchen_Windo"& _ 
                "w, Back_Door, Back_Door_Lock, Great_Room_Window_South, Great_Room_Window_North, "& _ 
                "Play_Room_Window_South, Play_Room_window_North, Famiy_Room_Window_South, Family_"& _ 
                "Room_Window_Front_South, Family_Room_Window_Front_Middle, Family_Room_Window_Fro"& _ 
                "nt_North, Front_Door, Front_Door_Lock, Dining_Room_Window_South, Dining_Room_Win"& _ 
                "dow_North, Master_Bath_Window, Master_Bedroom_Window_South, Master_Bedroom_Windo"& _ 
                "w_Back_South, Master_Bedroom_Window_Back_North, Sydney_Bedroom_Window, Ethan_Bed"& _ 
                "room_Window, Spare_Bedroom_Window_North, Spare_Bedroom_Window_South, Mailbox, Ba"& _ 
                "sement_Door, Basement_Door_Lock, Basement_Window_South, Basement_Window_North, B"& _ 
                "asement_Storage_Door, Server_Room_Motion, Upstairs_Hallway_Motion, Great_Room_Mo"& _ 
                "tion, Basement_Motion, Exterior_Motion, Doorbell, Telephone, Car_West, Car_East,"& _ 
                " House_Occupied, Brine_Tank, Lizard_Habitat_Temp, Internet_Link, Lizard_Fed, Sta"& _ 
                "ir_Lights, Geofence_Reached, Roomba_Run, Leak_Detected FROM Event_Current_State "& _ 
                "WHERE (Last_Update = @Last_Update)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Row_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Row_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Last_Update", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Last_Update", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Outside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Outside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Inside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Inside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kitchen_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kitchen_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Back_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Back_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Great_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Great_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Play_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Play_Room_window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Famiy_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Famiy_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Family_Room_Window_Front_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Family_Room_Window_Front_Middle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_Middle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Family_Room_Window_Front_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Front_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Front_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dining_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dining_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bath_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bath_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bedroom_Window_Back_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bedroom_Window_Back_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sydney_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sydney_Bedroom_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ethan_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ethan_Bedroom_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spare_Bedroom_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spare_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mailbox", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mailbox", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Storage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Storage_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Server_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Server_Room_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upstairs_Hallway_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upstairs_Hallway_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Great_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Exterior_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exterior_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Doorbell", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Doorbell", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telephone", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Car_West", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_West", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Car_East", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_East", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@House_Occupied", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "House_Occupied", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brine_Tank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brine_Tank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lizard_Habitat_Temp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Habitat_Temp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Internet_Link", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Internet_Link", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lizard_Fed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Fed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stair_Lights", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stair_Lights", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Geofence_Reached", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geofence_Reached", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roomba_Run", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Roomba_Run", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Leak_Detected", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Leak_Detected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Event_Current_State] SET [Row_ID] = @Row_ID, [Last_Update] = @Last_"& _ 
                "Update, [Garage_Door] = @Garage_Door, [Garage_Window_South] = @Garage_Window_Sou"& _ 
                "th, [Garage_Window_North] = @Garage_Window_North, [Garage_Outside_Door] = @Garag"& _ 
                "e_Outside_Door, [Garage_Outside_Door_Lock] = @Garage_Outside_Door_Lock, [Garage_"& _ 
                "Inside_Door] = @Garage_Inside_Door, [Garage_Inside_Door_Lock] = @Garage_Inside_D"& _ 
                "oor_Lock, [Kitchen_Window] = @Kitchen_Window, [Back_Door] = @Back_Door, [Back_Do"& _ 
                "or_Lock] = @Back_Door_Lock, [Great_Room_Window_South] = @Great_Room_Window_South"& _ 
                ", [Great_Room_Window_North] = @Great_Room_Window_North, [Play_Room_Window_South]"& _ 
                " = @Play_Room_Window_South, [Play_Room_window_North] = @Play_Room_window_North, "& _ 
                "[Famiy_Room_Window_South] = @Famiy_Room_Window_South, [Family_Room_Window_Front_"& _ 
                "South] = @Family_Room_Window_Front_South, [Family_Room_Window_Front_Middle] = @F"& _ 
                "amily_Room_Window_Front_Middle, [Family_Room_Window_Front_North] = @Family_Room_"& _ 
                "Window_Front_North, [Front_Door] = @Front_Door, [Front_Door_Lock] = @Front_Door_"& _ 
                "Lock, [Dining_Room_Window_South] = @Dining_Room_Window_South, [Dining_Room_Windo"& _ 
                "w_North] = @Dining_Room_Window_North, [Master_Bath_Window] = @Master_Bath_Window"& _ 
                ", [Master_Bedroom_Window_South] = @Master_Bedroom_Window_South, [Master_Bedroom_"& _ 
                "Window_Back_South] = @Master_Bedroom_Window_Back_South, [Master_Bedroom_Window_B"& _ 
                "ack_North] = @Master_Bedroom_Window_Back_North, [Sydney_Bedroom_Window] = @Sydne"& _ 
                "y_Bedroom_Window, [Ethan_Bedroom_Window] = @Ethan_Bedroom_Window, [Spare_Bedroom"& _ 
                "_Window_North] = @Spare_Bedroom_Window_North, [Spare_Bedroom_Window_South] = @Sp"& _ 
                "are_Bedroom_Window_South, [Mailbox] = @Mailbox, [Basement_Door] = @Basement_Door"& _ 
                ", [Basement_Door_Lock] = @Basement_Door_Lock, [Basement_Window_South] = @Basemen"& _ 
                "t_Window_South, [Basement_Window_North] = @Basement_Window_North, [Basement_Stor"& _ 
                "age_Door] = @Basement_Storage_Door, [Server_Room_Motion] = @Server_Room_Motion, "& _ 
                "[Upstairs_Hallway_Motion] = @Upstairs_Hallway_Motion, [Great_Room_Motion] = @Gre"& _ 
                "at_Room_Motion, [Basement_Motion] = @Basement_Motion, [Exterior_Motion] = @Exter"& _ 
                "ior_Motion, [Doorbell] = @Doorbell, [Telephone] = @Telephone, [Car_West] = @Car_"& _ 
                "West, [Car_East] = @Car_East, [House_Occupied] = @House_Occupied, [Brine_Tank] ="& _ 
                " @Brine_Tank, [Lizard_Habitat_Temp] = @Lizard_Habitat_Temp, [Internet_Link] = @I"& _ 
                "nternet_Link, [Lizard_Fed] = @Lizard_Fed, [Stair_Lights] = @Stair_Lights, [Geofe"& _ 
                "nce_Reached] = @Geofence_Reached, [Roomba_Run] = @Roomba_Run, [Leak_Detected] = "& _ 
                "@Leak_Detected WHERE (([Row_ID] = @Original_Row_ID) AND ([Last_Update] = @Origin"& _ 
                "al_Last_Update) AND ([Garage_Door] = @Original_Garage_Door) AND ([Garage_Window_"& _ 
                "South] = @Original_Garage_Window_South) AND ([Garage_Window_North] = @Original_G"& _ 
                "arage_Window_North) AND ([Garage_Outside_Door] = @Original_Garage_Outside_Door) "& _ 
                "AND ([Garage_Outside_Door_Lock] = @Original_Garage_Outside_Door_Lock) AND ([Gara"& _ 
                "ge_Inside_Door] = @Original_Garage_Inside_Door) AND ([Garage_Inside_Door_Lock] ="& _ 
                " @Original_Garage_Inside_Door_Lock) AND ([Kitchen_Window] = @Original_Kitchen_Wi"& _ 
                "ndow) AND ([Back_Door] = @Original_Back_Door) AND ([Back_Door_Lock] = @Original_"& _ 
                "Back_Door_Lock) AND ([Great_Room_Window_South] = @Original_Great_Room_Window_Sou"& _ 
                "th) AND ([Great_Room_Window_North] = @Original_Great_Room_Window_North) AND ([Pl"& _ 
                "ay_Room_Window_South] = @Original_Play_Room_Window_South) AND ([Play_Room_window"& _ 
                "_North] = @Original_Play_Room_window_North) AND ([Famiy_Room_Window_South] = @Or"& _ 
                "iginal_Famiy_Room_Window_South) AND ([Family_Room_Window_Front_South] = @Origina"& _ 
                "l_Family_Room_Window_Front_South) AND ([Family_Room_Window_Front_Middle] = @Orig"& _ 
                "inal_Family_Room_Window_Front_Middle) AND ([Family_Room_Window_Front_North] = @O"& _ 
                "riginal_Family_Room_Window_Front_North) AND ([Front_Door] = @Original_Front_Door"& _ 
                ") AND ([Front_Door_Lock] = @Original_Front_Door_Lock) AND ([Dining_Room_Window_S"& _ 
                "outh] = @Original_Dining_Room_Window_South) AND ([Dining_Room_Window_North] = @O"& _ 
                "riginal_Dining_Room_Window_North) AND ([Master_Bath_Window] = @Original_Master_B"& _ 
                "ath_Window) AND ([Master_Bedroom_Window_South] = @Original_Master_Bedroom_Window"& _ 
                "_South) AND ([Master_Bedroom_Window_Back_South] = @Original_Master_Bedroom_Windo"& _ 
                "w_Back_South) AND ([Master_Bedroom_Window_Back_North] = @Original_Master_Bedroom"& _ 
                "_Window_Back_North) AND ([Sydney_Bedroom_Window] = @Original_Sydney_Bedroom_Wind"& _ 
                "ow) AND ([Ethan_Bedroom_Window] = @Original_Ethan_Bedroom_Window) AND ([Spare_Be"& _ 
                "droom_Window_North] = @Original_Spare_Bedroom_Window_North) AND ([Spare_Bedroom_"& _ 
                "Window_South] = @Original_Spare_Bedroom_Window_South) AND ([Mailbox] = @Original"& _ 
                "_Mailbox) AND ([Basement_Door] = @Original_Basement_Door) AND ([Basement_Door_Lo"& _ 
                "ck] = @Original_Basement_Door_Lock) AND ([Basement_Window_South] = @Original_Bas"& _ 
                "ement_Window_South) AND ([Basement_Window_North] = @Original_Basement_Window_Nor"& _ 
                "th) AND ([Basement_Storage_Door] = @Original_Basement_Storage_Door) AND ([Server"& _ 
                "_Room_Motion] = @Original_Server_Room_Motion) AND ([Upstairs_Hallway_Motion] = @"& _ 
                "Original_Upstairs_Hallway_Motion) AND ([Great_Room_Motion] = @Original_Great_Roo"& _ 
                "m_Motion) AND ([Basement_Motion] = @Original_Basement_Motion) AND ([Exterior_Mot"& _ 
                "ion] = @Original_Exterior_Motion) AND ([Doorbell] = @Original_Doorbell) AND ([Te"& _ 
                "lephone] = @Original_Telephone) AND ([Car_West] = @Original_Car_West) AND ([Car_"& _ 
                "East] = @Original_Car_East) AND ([House_Occupied] = @Original_House_Occupied) AN"& _ 
                "D ([Brine_Tank] = @Original_Brine_Tank) AND ([Lizard_Habitat_Temp] = @Original_L"& _ 
                "izard_Habitat_Temp) AND ([Internet_Link] = @Original_Internet_Link) AND ([Lizard"& _ 
                "_Fed] = @Original_Lizard_Fed) AND ([Stair_Lights] = @Original_Stair_Lights) AND "& _ 
                "([Geofence_Reached] = @Original_Geofence_Reached) AND ([Roomba_Run] = @Original_"& _ 
                "Roomba_Run) AND ([Leak_Detected] = @Original_Leak_Detected));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Row_ID, La"& _ 
                "st_Update, Garage_Door, Garage_Window_South, Garage_Window_North, Garage_Outside"& _ 
                "_Door, Garage_Outside_Door_Lock, Garage_Inside_Door, Garage_Inside_Door_Lock, Ki"& _ 
                "tchen_Window, Back_Door, Back_Door_Lock, Great_Room_Window_South, Great_Room_Win"& _ 
                "dow_North, Play_Room_Window_South, Play_Room_window_North, Famiy_Room_Window_Sou"& _ 
                "th, Family_Room_Window_Front_South, Family_Room_Window_Front_Middle, Family_Room"& _ 
                "_Window_Front_North, Front_Door, Front_Door_Lock, Dining_Room_Window_South, Dini"& _ 
                "ng_Room_Window_North, Master_Bath_Window, Master_Bedroom_Window_South, Master_Be"& _ 
                "droom_Window_Back_South, Master_Bedroom_Window_Back_North, Sydney_Bedroom_Window"& _ 
                ", Ethan_Bedroom_Window, Spare_Bedroom_Window_North, Spare_Bedroom_Window_South, "& _ 
                "Mailbox, Basement_Door, Basement_Door_Lock, Basement_Window_South, Basement_Wind"& _ 
                "ow_North, Basement_Storage_Door, Server_Room_Motion, Upstairs_Hallway_Motion, Gr"& _ 
                "eat_Room_Motion, Basement_Motion, Exterior_Motion, Doorbell, Telephone, Car_West"& _ 
                ", Car_East, House_Occupied, Brine_Tank, Lizard_Habitat_Temp, Internet_Link, Liza"& _ 
                "rd_Fed, Stair_Lights, Geofence_Reached, Roomba_Run, Leak_Detected FROM Event_Cur"& _ 
                "rent_State WHERE (Last_Update = @Last_Update)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Row_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Row_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Last_Update", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Last_Update", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Outside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Outside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Inside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Garage_Inside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kitchen_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kitchen_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Back_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Back_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Great_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Great_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Play_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Play_Room_window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Famiy_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Famiy_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Family_Room_Window_Front_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Family_Room_Window_Front_Middle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_Middle", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Family_Room_Window_Front_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Front_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Front_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dining_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dining_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bath_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bath_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bedroom_Window_Back_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Master_Bedroom_Window_Back_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sydney_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sydney_Bedroom_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ethan_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ethan_Bedroom_Window", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spare_Bedroom_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Spare_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mailbox", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mailbox", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door_Lock", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_South", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_North", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Storage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Storage_Door", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Server_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Server_Room_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upstairs_Hallway_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upstairs_Hallway_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Great_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Basement_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Exterior_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exterior_Motion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Doorbell", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Doorbell", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telephone", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Car_West", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_West", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Car_East", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_East", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@House_Occupied", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "House_Occupied", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Brine_Tank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brine_Tank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lizard_Habitat_Temp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Habitat_Temp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Internet_Link", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Internet_Link", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lizard_Fed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Fed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stair_Lights", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stair_Lights", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Geofence_Reached", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geofence_Reached", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Roomba_Run", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Roomba_Run", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Leak_Detected", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Leak_Detected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Row_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Row_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Last_Update", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Last_Update", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Outside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Outside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Outside_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Inside_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Garage_Inside_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Garage_Inside_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Kitchen_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kitchen_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Back_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Back_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Back_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Great_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Great_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Play_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Play_Room_window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Play_Room_window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Famiy_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Famiy_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Family_Room_Window_Front_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Family_Room_Window_Front_Middle", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_Middle", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Family_Room_Window_Front_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Family_Room_Window_Front_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Front_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Front_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Front_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Dining_Room_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Dining_Room_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Dining_Room_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bath_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bath_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bedroom_Window_Back_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Master_Bedroom_Window_Back_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Master_Bedroom_Window_Back_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sydney_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sydney_Bedroom_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Ethan_Bedroom_Window", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ethan_Bedroom_Window", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Spare_Bedroom_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Spare_Bedroom_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Spare_Bedroom_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mailbox", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mailbox", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Door_Lock", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Door_Lock", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Window_South", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_South", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Window_North", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Window_North", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Storage_Door", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Storage_Door", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Server_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Server_Room_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Upstairs_Hallway_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upstairs_Hallway_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Great_Room_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Great_Room_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Basement_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Basement_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Exterior_Motion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Exterior_Motion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Doorbell", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Doorbell", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telephone", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Car_West", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_West", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Car_East", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Car_East", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_House_Occupied", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "House_Occupied", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Brine_Tank", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Brine_Tank", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Lizard_Habitat_Temp", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Habitat_Temp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Internet_Link", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Internet_Link", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Lizard_Fed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lizard_Fed", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stair_Lights", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stair_Lights", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Geofence_Reached", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Geofence_Reached", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Roomba_Run", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Roomba_Run", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Leak_Detected", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Leak_Detected", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.WatchdogConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Row_ID, Last_Update, Garage_Door, Garage_Window_South, Garage_Window_North"& _ 
                ", Garage_Outside_Door, Garage_Outside_Door_Lock, Garage_Inside_Door, Garage_Insi"& _ 
                "de_Door_Lock, Kitchen_Window, Back_Door, Back_Door_Lock, Great_Room_Window_South"& _ 
                ", Great_Room_Window_North, Play_Room_Window_South, Play_Room_window_North, Famiy"& _ 
                "_Room_Window_South, Family_Room_Window_Front_South, Family_Room_Window_Front_Mid"& _ 
                "dle, Family_Room_Window_Front_North, Front_Door, Front_Door_Lock, Dining_Room_Wi"& _ 
                "ndow_South, Dining_Room_Window_North, Master_Bath_Window, Master_Bedroom_Window_"& _ 
                "South, Master_Bedroom_Window_Back_South, Master_Bedroom_Window_Back_North, Sydne"& _ 
                "y_Bedroom_Window, Ethan_Bedroom_Window, Spare_Bedroom_Window_North, Spare_Bedroo"& _ 
                "m_Window_South, Mailbox, Basement_Door, Basement_Door_Lock, Basement_Window_Sout"& _ 
                "h, Basement_Window_North, Basement_Storage_Door, Server_Room_Motion, Upstairs_Ha"& _ 
                "llway_Motion, Great_Room_Motion, Basement_Motion, Exterior_Motion, Doorbell, Tel"& _ 
                "ephone, Car_West, Car_East, House_Occupied, Brine_Tank, Lizard_Habitat_Temp, Int"& _ 
                "ernet_Link, Lizard_Fed, Stair_Lights, Geofence_Reached, Roomba_Run, Leak_Detecte"& _ 
                "d FROM dbo.Event_Current_State"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "UPDATE       Event_Current_State"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Leak_Detected = 1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                "    (Row_ID = 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As WatchdogDataSet1.Event_Current_StateDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As WatchdogDataSet1.Event_Current_StateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As WatchdogDataSet1.Event_Current_StateDataTable = New WatchdogDataSet1.Event_Current_StateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As WatchdogDataSet1.Event_Current_StateDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As WatchdogDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "Event_Current_State")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Row_ID As Integer,  _
                    ByVal Original_Last_Update As Date,  _
                    ByVal Original_Garage_Door As Integer,  _
                    ByVal Original_Garage_Window_South As Integer,  _
                    ByVal Original_Garage_Window_North As Integer,  _
                    ByVal Original_Garage_Outside_Door As Integer,  _
                    ByVal Original_Garage_Outside_Door_Lock As Integer,  _
                    ByVal Original_Garage_Inside_Door As Integer,  _
                    ByVal Original_Garage_Inside_Door_Lock As Integer,  _
                    ByVal Original_Kitchen_Window As Integer,  _
                    ByVal Original_Back_Door As Integer,  _
                    ByVal Original_Back_Door_Lock As Integer,  _
                    ByVal Original_Great_Room_Window_South As Integer,  _
                    ByVal Original_Great_Room_Window_North As Integer,  _
                    ByVal Original_Play_Room_Window_South As Integer,  _
                    ByVal Original_Play_Room_window_North As Integer,  _
                    ByVal Original_Famiy_Room_Window_South As Integer,  _
                    ByVal Original_Family_Room_Window_Front_South As Integer,  _
                    ByVal Original_Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Original_Family_Room_Window_Front_North As Integer,  _
                    ByVal Original_Front_Door As Integer,  _
                    ByVal Original_Front_Door_Lock As Integer,  _
                    ByVal Original_Dining_Room_Window_South As Integer,  _
                    ByVal Original_Dining_Room_Window_North As Integer,  _
                    ByVal Original_Master_Bath_Window As Integer,  _
                    ByVal Original_Master_Bedroom_Window_South As Integer,  _
                    ByVal Original_Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Original_Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Original_Sydney_Bedroom_Window As Integer,  _
                    ByVal Original_Ethan_Bedroom_Window As Integer,  _
                    ByVal Original_Spare_Bedroom_Window_North As Integer,  _
                    ByVal Original_Spare_Bedroom_Window_South As Integer,  _
                    ByVal Original_Mailbox As Integer,  _
                    ByVal Original_Basement_Door As Integer,  _
                    ByVal Original_Basement_Door_Lock As Integer,  _
                    ByVal Original_Basement_Window_South As Integer,  _
                    ByVal Original_Basement_Window_North As Integer,  _
                    ByVal Original_Basement_Storage_Door As Integer,  _
                    ByVal Original_Server_Room_Motion As Integer,  _
                    ByVal Original_Upstairs_Hallway_Motion As Integer,  _
                    ByVal Original_Great_Room_Motion As Integer,  _
                    ByVal Original_Basement_Motion As Integer,  _
                    ByVal Original_Exterior_Motion As Integer,  _
                    ByVal Original_Doorbell As Integer,  _
                    ByVal Original_Telephone As Integer,  _
                    ByVal Original_Car_West As Integer,  _
                    ByVal Original_Car_East As Integer,  _
                    ByVal Original_House_Occupied As Integer,  _
                    ByVal Original_Brine_Tank As Integer,  _
                    ByVal Original_Lizard_Habitat_Temp As Integer,  _
                    ByVal Original_Internet_Link As Integer,  _
                    ByVal Original_Lizard_Fed As Integer,  _
                    ByVal Original_Stair_Lights As Integer,  _
                    ByVal Original_Geofence_Reached As Integer,  _
                    ByVal Original_Roomba_Run As Integer,  _
                    ByVal Original_Leak_Detected As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Row_ID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Last_Update,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Garage_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Garage_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Garage_Window_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Garage_Outside_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Garage_Outside_Door_Lock,Integer)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Garage_Inside_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Garage_Inside_Door_Lock,Integer)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Kitchen_Window,Integer)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Back_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Back_Door_Lock,Integer)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Great_Room_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_Great_Room_Window_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Play_Room_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Play_Room_window_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Famiy_Room_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Family_Room_Window_Front_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Family_Room_Window_Front_Middle,Integer)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_Family_Room_Window_Front_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Front_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_Front_Door_Lock,Integer)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Dining_Room_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Dining_Room_Window_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Master_Bath_Window,Integer)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Master_Bedroom_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Master_Bedroom_Window_Back_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Master_Bedroom_Window_Back_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Sydney_Bedroom_Window,Integer)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_Ethan_Bedroom_Window,Integer)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Spare_Bedroom_Window_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_Spare_Bedroom_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Mailbox,Integer)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Basement_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Basement_Door_Lock,Integer)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Basement_Window_South,Integer)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_Basement_Window_North,Integer)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_Basement_Storage_Door,Integer)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_Server_Room_Motion,Integer)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_Upstairs_Hallway_Motion,Integer)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Great_Room_Motion,Integer)
            Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_Basement_Motion,Integer)
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Exterior_Motion,Integer)
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_Doorbell,Integer)
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_Telephone,Integer)
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Car_West,Integer)
            Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_Car_East,Integer)
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_House_Occupied,Integer)
            Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Brine_Tank,Integer)
            Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_Lizard_Habitat_Temp,Integer)
            Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Internet_Link,Integer)
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_Lizard_Fed,Integer)
            Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_Stair_Lights,Integer)
            Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_Geofence_Reached,Integer)
            Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_Roomba_Run,Integer)
            Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_Leak_Detected,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Row_ID As Integer,  _
                    ByVal Last_Update As Date,  _
                    ByVal Garage_Door As Integer,  _
                    ByVal Garage_Window_South As Integer,  _
                    ByVal Garage_Window_North As Integer,  _
                    ByVal Garage_Outside_Door As Integer,  _
                    ByVal Garage_Outside_Door_Lock As Integer,  _
                    ByVal Garage_Inside_Door As Integer,  _
                    ByVal Garage_Inside_Door_Lock As Integer,  _
                    ByVal Kitchen_Window As Integer,  _
                    ByVal Back_Door As Integer,  _
                    ByVal Back_Door_Lock As Integer,  _
                    ByVal Great_Room_Window_South As Integer,  _
                    ByVal Great_Room_Window_North As Integer,  _
                    ByVal Play_Room_Window_South As Integer,  _
                    ByVal Play_Room_window_North As Integer,  _
                    ByVal Famiy_Room_Window_South As Integer,  _
                    ByVal Family_Room_Window_Front_South As Integer,  _
                    ByVal Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Family_Room_Window_Front_North As Integer,  _
                    ByVal Front_Door As Integer,  _
                    ByVal Front_Door_Lock As Integer,  _
                    ByVal Dining_Room_Window_South As Integer,  _
                    ByVal Dining_Room_Window_North As Integer,  _
                    ByVal Master_Bath_Window As Integer,  _
                    ByVal Master_Bedroom_Window_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Sydney_Bedroom_Window As Integer,  _
                    ByVal Ethan_Bedroom_Window As Integer,  _
                    ByVal Spare_Bedroom_Window_North As Integer,  _
                    ByVal Spare_Bedroom_Window_South As Integer,  _
                    ByVal Mailbox As Integer,  _
                    ByVal Basement_Door As Integer,  _
                    ByVal Basement_Door_Lock As Integer,  _
                    ByVal Basement_Window_South As Integer,  _
                    ByVal Basement_Window_North As Integer,  _
                    ByVal Basement_Storage_Door As Integer,  _
                    ByVal Server_Room_Motion As Integer,  _
                    ByVal Upstairs_Hallway_Motion As Integer,  _
                    ByVal Great_Room_Motion As Integer,  _
                    ByVal Basement_Motion As Integer,  _
                    ByVal Exterior_Motion As Integer,  _
                    ByVal Doorbell As Integer,  _
                    ByVal Telephone As Integer,  _
                    ByVal Car_West As Integer,  _
                    ByVal Car_East As Integer,  _
                    ByVal House_Occupied As Integer,  _
                    ByVal Brine_Tank As Integer,  _
                    ByVal Lizard_Habitat_Temp As Integer,  _
                    ByVal Internet_Link As Integer,  _
                    ByVal Lizard_Fed As Integer,  _
                    ByVal Stair_Lights As Integer,  _
                    ByVal Geofence_Reached As Integer,  _
                    ByVal Roomba_Run As Integer,  _
                    ByVal Leak_Detected As Integer) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Row_ID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Last_Update,Date)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Garage_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Garage_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Garage_Window_North,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Garage_Outside_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Garage_Outside_Door_Lock,Integer)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Garage_Inside_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Garage_Inside_Door_Lock,Integer)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(Kitchen_Window,Integer)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(Back_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(Back_Door_Lock,Integer)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(Great_Room_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Great_Room_Window_North,Integer)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(Play_Room_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(Play_Room_window_North,Integer)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Famiy_Room_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(Family_Room_Window_Front_South,Integer)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(Family_Room_Window_Front_Middle,Integer)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(Family_Room_Window_Front_North,Integer)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(Front_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(Front_Door_Lock,Integer)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(Dining_Room_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(Dining_Room_Window_North,Integer)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(Master_Bath_Window,Integer)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(Master_Bedroom_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(Master_Bedroom_Window_Back_South,Integer)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(Master_Bedroom_Window_Back_North,Integer)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(Sydney_Bedroom_Window,Integer)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(Ethan_Bedroom_Window,Integer)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(Spare_Bedroom_Window_North,Integer)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(Spare_Bedroom_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(Mailbox,Integer)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(Basement_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(Basement_Door_Lock,Integer)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(Basement_Window_South,Integer)
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(Basement_Window_North,Integer)
            Me.Adapter.InsertCommand.Parameters(37).Value = CType(Basement_Storage_Door,Integer)
            Me.Adapter.InsertCommand.Parameters(38).Value = CType(Server_Room_Motion,Integer)
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(Upstairs_Hallway_Motion,Integer)
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(Great_Room_Motion,Integer)
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(Basement_Motion,Integer)
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(Exterior_Motion,Integer)
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(Doorbell,Integer)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(Telephone,Integer)
            Me.Adapter.InsertCommand.Parameters(45).Value = CType(Car_West,Integer)
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(Car_East,Integer)
            Me.Adapter.InsertCommand.Parameters(47).Value = CType(House_Occupied,Integer)
            Me.Adapter.InsertCommand.Parameters(48).Value = CType(Brine_Tank,Integer)
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(Lizard_Habitat_Temp,Integer)
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(Internet_Link,Integer)
            Me.Adapter.InsertCommand.Parameters(51).Value = CType(Lizard_Fed,Integer)
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(Stair_Lights,Integer)
            Me.Adapter.InsertCommand.Parameters(53).Value = CType(Geofence_Reached,Integer)
            Me.Adapter.InsertCommand.Parameters(54).Value = CType(Roomba_Run,Integer)
            Me.Adapter.InsertCommand.Parameters(55).Value = CType(Leak_Detected,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Row_ID As Integer,  _
                    ByVal Last_Update As Date,  _
                    ByVal Garage_Door As Integer,  _
                    ByVal Garage_Window_South As Integer,  _
                    ByVal Garage_Window_North As Integer,  _
                    ByVal Garage_Outside_Door As Integer,  _
                    ByVal Garage_Outside_Door_Lock As Integer,  _
                    ByVal Garage_Inside_Door As Integer,  _
                    ByVal Garage_Inside_Door_Lock As Integer,  _
                    ByVal Kitchen_Window As Integer,  _
                    ByVal Back_Door As Integer,  _
                    ByVal Back_Door_Lock As Integer,  _
                    ByVal Great_Room_Window_South As Integer,  _
                    ByVal Great_Room_Window_North As Integer,  _
                    ByVal Play_Room_Window_South As Integer,  _
                    ByVal Play_Room_window_North As Integer,  _
                    ByVal Famiy_Room_Window_South As Integer,  _
                    ByVal Family_Room_Window_Front_South As Integer,  _
                    ByVal Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Family_Room_Window_Front_North As Integer,  _
                    ByVal Front_Door As Integer,  _
                    ByVal Front_Door_Lock As Integer,  _
                    ByVal Dining_Room_Window_South As Integer,  _
                    ByVal Dining_Room_Window_North As Integer,  _
                    ByVal Master_Bath_Window As Integer,  _
                    ByVal Master_Bedroom_Window_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Sydney_Bedroom_Window As Integer,  _
                    ByVal Ethan_Bedroom_Window As Integer,  _
                    ByVal Spare_Bedroom_Window_North As Integer,  _
                    ByVal Spare_Bedroom_Window_South As Integer,  _
                    ByVal Mailbox As Integer,  _
                    ByVal Basement_Door As Integer,  _
                    ByVal Basement_Door_Lock As Integer,  _
                    ByVal Basement_Window_South As Integer,  _
                    ByVal Basement_Window_North As Integer,  _
                    ByVal Basement_Storage_Door As Integer,  _
                    ByVal Server_Room_Motion As Integer,  _
                    ByVal Upstairs_Hallway_Motion As Integer,  _
                    ByVal Great_Room_Motion As Integer,  _
                    ByVal Basement_Motion As Integer,  _
                    ByVal Exterior_Motion As Integer,  _
                    ByVal Doorbell As Integer,  _
                    ByVal Telephone As Integer,  _
                    ByVal Car_West As Integer,  _
                    ByVal Car_East As Integer,  _
                    ByVal House_Occupied As Integer,  _
                    ByVal Brine_Tank As Integer,  _
                    ByVal Lizard_Habitat_Temp As Integer,  _
                    ByVal Internet_Link As Integer,  _
                    ByVal Lizard_Fed As Integer,  _
                    ByVal Stair_Lights As Integer,  _
                    ByVal Geofence_Reached As Integer,  _
                    ByVal Roomba_Run As Integer,  _
                    ByVal Leak_Detected As Integer,  _
                    ByVal Original_Row_ID As Integer,  _
                    ByVal Original_Last_Update As Date,  _
                    ByVal Original_Garage_Door As Integer,  _
                    ByVal Original_Garage_Window_South As Integer,  _
                    ByVal Original_Garage_Window_North As Integer,  _
                    ByVal Original_Garage_Outside_Door As Integer,  _
                    ByVal Original_Garage_Outside_Door_Lock As Integer,  _
                    ByVal Original_Garage_Inside_Door As Integer,  _
                    ByVal Original_Garage_Inside_Door_Lock As Integer,  _
                    ByVal Original_Kitchen_Window As Integer,  _
                    ByVal Original_Back_Door As Integer,  _
                    ByVal Original_Back_Door_Lock As Integer,  _
                    ByVal Original_Great_Room_Window_South As Integer,  _
                    ByVal Original_Great_Room_Window_North As Integer,  _
                    ByVal Original_Play_Room_Window_South As Integer,  _
                    ByVal Original_Play_Room_window_North As Integer,  _
                    ByVal Original_Famiy_Room_Window_South As Integer,  _
                    ByVal Original_Family_Room_Window_Front_South As Integer,  _
                    ByVal Original_Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Original_Family_Room_Window_Front_North As Integer,  _
                    ByVal Original_Front_Door As Integer,  _
                    ByVal Original_Front_Door_Lock As Integer,  _
                    ByVal Original_Dining_Room_Window_South As Integer,  _
                    ByVal Original_Dining_Room_Window_North As Integer,  _
                    ByVal Original_Master_Bath_Window As Integer,  _
                    ByVal Original_Master_Bedroom_Window_South As Integer,  _
                    ByVal Original_Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Original_Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Original_Sydney_Bedroom_Window As Integer,  _
                    ByVal Original_Ethan_Bedroom_Window As Integer,  _
                    ByVal Original_Spare_Bedroom_Window_North As Integer,  _
                    ByVal Original_Spare_Bedroom_Window_South As Integer,  _
                    ByVal Original_Mailbox As Integer,  _
                    ByVal Original_Basement_Door As Integer,  _
                    ByVal Original_Basement_Door_Lock As Integer,  _
                    ByVal Original_Basement_Window_South As Integer,  _
                    ByVal Original_Basement_Window_North As Integer,  _
                    ByVal Original_Basement_Storage_Door As Integer,  _
                    ByVal Original_Server_Room_Motion As Integer,  _
                    ByVal Original_Upstairs_Hallway_Motion As Integer,  _
                    ByVal Original_Great_Room_Motion As Integer,  _
                    ByVal Original_Basement_Motion As Integer,  _
                    ByVal Original_Exterior_Motion As Integer,  _
                    ByVal Original_Doorbell As Integer,  _
                    ByVal Original_Telephone As Integer,  _
                    ByVal Original_Car_West As Integer,  _
                    ByVal Original_Car_East As Integer,  _
                    ByVal Original_House_Occupied As Integer,  _
                    ByVal Original_Brine_Tank As Integer,  _
                    ByVal Original_Lizard_Habitat_Temp As Integer,  _
                    ByVal Original_Internet_Link As Integer,  _
                    ByVal Original_Lizard_Fed As Integer,  _
                    ByVal Original_Stair_Lights As Integer,  _
                    ByVal Original_Geofence_Reached As Integer,  _
                    ByVal Original_Roomba_Run As Integer,  _
                    ByVal Original_Leak_Detected As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Row_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Last_Update,Date)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Garage_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Garage_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Garage_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Garage_Outside_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Garage_Outside_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Garage_Inside_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Garage_Inside_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Kitchen_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Back_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Back_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Great_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Great_Room_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Play_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Play_Room_window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Famiy_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Family_Room_Window_Front_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Family_Room_Window_Front_Middle,Integer)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Family_Room_Window_Front_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Front_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Front_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Dining_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Dining_Room_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Master_Bath_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Master_Bedroom_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Master_Bedroom_Window_Back_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Master_Bedroom_Window_Back_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Sydney_Bedroom_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Ethan_Bedroom_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Spare_Bedroom_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Spare_Bedroom_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Mailbox,Integer)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Basement_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Basement_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Basement_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Basement_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Basement_Storage_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Server_Room_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Upstairs_Hallway_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Great_Room_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Basement_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Exterior_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Doorbell,Integer)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Telephone,Integer)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Car_West,Integer)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Car_East,Integer)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(House_Occupied,Integer)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Brine_Tank,Integer)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Lizard_Habitat_Temp,Integer)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Internet_Link,Integer)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Lizard_Fed,Integer)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Stair_Lights,Integer)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Geofence_Reached,Integer)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Roomba_Run,Integer)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Leak_Detected,Integer)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_Row_ID,Integer)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_Last_Update,Date)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_Garage_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_Garage_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_Garage_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Garage_Outside_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_Garage_Outside_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Garage_Inside_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_Garage_Inside_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Kitchen_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_Back_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Back_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_Great_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_Great_Room_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_Play_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_Play_Room_window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_Famiy_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Family_Room_Window_Front_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_Family_Room_Window_Front_Middle,Integer)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_Family_Room_Window_Front_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_Front_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_Front_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_Dining_Room_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_Dining_Room_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Master_Bath_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_Master_Bedroom_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_Master_Bedroom_Window_Back_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Master_Bedroom_Window_Back_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_Sydney_Bedroom_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Ethan_Bedroom_Window,Integer)
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_Spare_Bedroom_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_Spare_Bedroom_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_Mailbox,Integer)
            Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_Basement_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_Basement_Door_Lock,Integer)
            Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_Basement_Window_South,Integer)
            Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_Basement_Window_North,Integer)
            Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_Basement_Storage_Door,Integer)
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_Server_Room_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_Upstairs_Hallway_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_Great_Room_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_Basement_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_Exterior_Motion,Integer)
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_Doorbell,Integer)
            Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_Telephone,Integer)
            Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_Car_West,Integer)
            Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_Car_East,Integer)
            Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_House_Occupied,Integer)
            Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_Brine_Tank,Integer)
            Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_Lizard_Habitat_Temp,Integer)
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_Internet_Link,Integer)
            Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_Lizard_Fed,Integer)
            Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_Stair_Lights,Integer)
            Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_Geofence_Reached,Integer)
            Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_Roomba_Run,Integer)
            Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_Leak_Detected,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Row_ID As Integer,  _
                    ByVal Garage_Door As Integer,  _
                    ByVal Garage_Window_South As Integer,  _
                    ByVal Garage_Window_North As Integer,  _
                    ByVal Garage_Outside_Door As Integer,  _
                    ByVal Garage_Outside_Door_Lock As Integer,  _
                    ByVal Garage_Inside_Door As Integer,  _
                    ByVal Garage_Inside_Door_Lock As Integer,  _
                    ByVal Kitchen_Window As Integer,  _
                    ByVal Back_Door As Integer,  _
                    ByVal Back_Door_Lock As Integer,  _
                    ByVal Great_Room_Window_South As Integer,  _
                    ByVal Great_Room_Window_North As Integer,  _
                    ByVal Play_Room_Window_South As Integer,  _
                    ByVal Play_Room_window_North As Integer,  _
                    ByVal Famiy_Room_Window_South As Integer,  _
                    ByVal Family_Room_Window_Front_South As Integer,  _
                    ByVal Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Family_Room_Window_Front_North As Integer,  _
                    ByVal Front_Door As Integer,  _
                    ByVal Front_Door_Lock As Integer,  _
                    ByVal Dining_Room_Window_South As Integer,  _
                    ByVal Dining_Room_Window_North As Integer,  _
                    ByVal Master_Bath_Window As Integer,  _
                    ByVal Master_Bedroom_Window_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Sydney_Bedroom_Window As Integer,  _
                    ByVal Ethan_Bedroom_Window As Integer,  _
                    ByVal Spare_Bedroom_Window_North As Integer,  _
                    ByVal Spare_Bedroom_Window_South As Integer,  _
                    ByVal Mailbox As Integer,  _
                    ByVal Basement_Door As Integer,  _
                    ByVal Basement_Door_Lock As Integer,  _
                    ByVal Basement_Window_South As Integer,  _
                    ByVal Basement_Window_North As Integer,  _
                    ByVal Basement_Storage_Door As Integer,  _
                    ByVal Server_Room_Motion As Integer,  _
                    ByVal Upstairs_Hallway_Motion As Integer,  _
                    ByVal Great_Room_Motion As Integer,  _
                    ByVal Basement_Motion As Integer,  _
                    ByVal Exterior_Motion As Integer,  _
                    ByVal Doorbell As Integer,  _
                    ByVal Telephone As Integer,  _
                    ByVal Car_West As Integer,  _
                    ByVal Car_East As Integer,  _
                    ByVal House_Occupied As Integer,  _
                    ByVal Brine_Tank As Integer,  _
                    ByVal Lizard_Habitat_Temp As Integer,  _
                    ByVal Internet_Link As Integer,  _
                    ByVal Lizard_Fed As Integer,  _
                    ByVal Stair_Lights As Integer,  _
                    ByVal Geofence_Reached As Integer,  _
                    ByVal Roomba_Run As Integer,  _
                    ByVal Leak_Detected As Integer,  _
                    ByVal Original_Row_ID As Integer,  _
                    ByVal Original_Last_Update As Date,  _
                    ByVal Original_Garage_Door As Integer,  _
                    ByVal Original_Garage_Window_South As Integer,  _
                    ByVal Original_Garage_Window_North As Integer,  _
                    ByVal Original_Garage_Outside_Door As Integer,  _
                    ByVal Original_Garage_Outside_Door_Lock As Integer,  _
                    ByVal Original_Garage_Inside_Door As Integer,  _
                    ByVal Original_Garage_Inside_Door_Lock As Integer,  _
                    ByVal Original_Kitchen_Window As Integer,  _
                    ByVal Original_Back_Door As Integer,  _
                    ByVal Original_Back_Door_Lock As Integer,  _
                    ByVal Original_Great_Room_Window_South As Integer,  _
                    ByVal Original_Great_Room_Window_North As Integer,  _
                    ByVal Original_Play_Room_Window_South As Integer,  _
                    ByVal Original_Play_Room_window_North As Integer,  _
                    ByVal Original_Famiy_Room_Window_South As Integer,  _
                    ByVal Original_Family_Room_Window_Front_South As Integer,  _
                    ByVal Original_Family_Room_Window_Front_Middle As Integer,  _
                    ByVal Original_Family_Room_Window_Front_North As Integer,  _
                    ByVal Original_Front_Door As Integer,  _
                    ByVal Original_Front_Door_Lock As Integer,  _
                    ByVal Original_Dining_Room_Window_South As Integer,  _
                    ByVal Original_Dining_Room_Window_North As Integer,  _
                    ByVal Original_Master_Bath_Window As Integer,  _
                    ByVal Original_Master_Bedroom_Window_South As Integer,  _
                    ByVal Original_Master_Bedroom_Window_Back_South As Integer,  _
                    ByVal Original_Master_Bedroom_Window_Back_North As Integer,  _
                    ByVal Original_Sydney_Bedroom_Window As Integer,  _
                    ByVal Original_Ethan_Bedroom_Window As Integer,  _
                    ByVal Original_Spare_Bedroom_Window_North As Integer,  _
                    ByVal Original_Spare_Bedroom_Window_South As Integer,  _
                    ByVal Original_Mailbox As Integer,  _
                    ByVal Original_Basement_Door As Integer,  _
                    ByVal Original_Basement_Door_Lock As Integer,  _
                    ByVal Original_Basement_Window_South As Integer,  _
                    ByVal Original_Basement_Window_North As Integer,  _
                    ByVal Original_Basement_Storage_Door As Integer,  _
                    ByVal Original_Server_Room_Motion As Integer,  _
                    ByVal Original_Upstairs_Hallway_Motion As Integer,  _
                    ByVal Original_Great_Room_Motion As Integer,  _
                    ByVal Original_Basement_Motion As Integer,  _
                    ByVal Original_Exterior_Motion As Integer,  _
                    ByVal Original_Doorbell As Integer,  _
                    ByVal Original_Telephone As Integer,  _
                    ByVal Original_Car_West As Integer,  _
                    ByVal Original_Car_East As Integer,  _
                    ByVal Original_House_Occupied As Integer,  _
                    ByVal Original_Brine_Tank As Integer,  _
                    ByVal Original_Lizard_Habitat_Temp As Integer,  _
                    ByVal Original_Internet_Link As Integer,  _
                    ByVal Original_Lizard_Fed As Integer,  _
                    ByVal Original_Stair_Lights As Integer,  _
                    ByVal Original_Geofence_Reached As Integer,  _
                    ByVal Original_Roomba_Run As Integer,  _
                    ByVal Original_Leak_Detected As Integer) As Integer
            Return Me.Update(Row_ID, Original_Last_Update, Garage_Door, Garage_Window_South, Garage_Window_North, Garage_Outside_Door, Garage_Outside_Door_Lock, Garage_Inside_Door, Garage_Inside_Door_Lock, Kitchen_Window, Back_Door, Back_Door_Lock, Great_Room_Window_South, Great_Room_Window_North, Play_Room_Window_South, Play_Room_window_North, Famiy_Room_Window_South, Family_Room_Window_Front_South, Family_Room_Window_Front_Middle, Family_Room_Window_Front_North, Front_Door, Front_Door_Lock, Dining_Room_Window_South, Dining_Room_Window_North, Master_Bath_Window, Master_Bedroom_Window_South, Master_Bedroom_Window_Back_South, Master_Bedroom_Window_Back_North, Sydney_Bedroom_Window, Ethan_Bedroom_Window, Spare_Bedroom_Window_North, Spare_Bedroom_Window_South, Mailbox, Basement_Door, Basement_Door_Lock, Basement_Window_South, Basement_Window_North, Basement_Storage_Door, Server_Room_Motion, Upstairs_Hallway_Motion, Great_Room_Motion, Basement_Motion, Exterior_Motion, Doorbell, Telephone, Car_West, Car_East, House_Occupied, Brine_Tank, Lizard_Habitat_Temp, Internet_Link, Lizard_Fed, Stair_Lights, Geofence_Reached, Roomba_Run, Leak_Detected, Original_Row_ID, Original_Last_Update, Original_Garage_Door, Original_Garage_Window_South, Original_Garage_Window_North, Original_Garage_Outside_Door, Original_Garage_Outside_Door_Lock, Original_Garage_Inside_Door, Original_Garage_Inside_Door_Lock, Original_Kitchen_Window, Original_Back_Door, Original_Back_Door_Lock, Original_Great_Room_Window_South, Original_Great_Room_Window_North, Original_Play_Room_Window_South, Original_Play_Room_window_North, Original_Famiy_Room_Window_South, Original_Family_Room_Window_Front_South, Original_Family_Room_Window_Front_Middle, Original_Family_Room_Window_Front_North, Original_Front_Door, Original_Front_Door_Lock, Original_Dining_Room_Window_South, Original_Dining_Room_Window_North, Original_Master_Bath_Window, Original_Master_Bedroom_Window_South, Original_Master_Bedroom_Window_Back_South, Original_Master_Bedroom_Window_Back_North, Original_Sydney_Bedroom_Window, Original_Ethan_Bedroom_Window, Original_Spare_Bedroom_Window_North, Original_Spare_Bedroom_Window_South, Original_Mailbox, Original_Basement_Door, Original_Basement_Door_Lock, Original_Basement_Window_South, Original_Basement_Window_North, Original_Basement_Storage_Door, Original_Server_Room_Motion, Original_Upstairs_Hallway_Motion, Original_Great_Room_Motion, Original_Basement_Motion, Original_Exterior_Motion, Original_Doorbell, Original_Telephone, Original_Car_West, Original_Car_East, Original_House_Occupied, Original_Brine_Tank, Original_Lizard_Habitat_Temp, Original_Internet_Link, Original_Lizard_Fed, Original_Stair_Lights, Original_Geofence_Reached, Original_Roomba_Run, Original_Leak_Detected)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function AlertLeakDetected() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Water_Usage_HistoryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Water_Usage_History"
            tableMapping.ColumnMappings.Add("Event_Timestamp", "Event_Timestamp")
            tableMapping.ColumnMappings.Add("Gallons_Used", "Gallons_Used")
            tableMapping.ColumnMappings.Add("Irrigation_gallons", "Irrigation_gallons")
            tableMapping.ColumnMappings.Add("Irrigation_code", "Irrigation_code")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Water_Usage_History] ([Event_Timestamp], [Gallons_Used], [Irri"& _ 
                "gation_gallons], [Irrigation_code]) VALUES (@Event_Timestamp, @Gallons_Used, @Ir"& _ 
                "rigation_gallons, @Irrigation_code)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gallons_Used", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gallons_Used", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irrigation_gallons", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irrigation_gallons", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irrigation_code", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Irrigation_code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.WatchdogConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Event_Timestamp, Gallons_Used, Irrigation_gallons, Irrigation_code FROM db"& _ 
                "o.Water_Usage_History"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TOP (1) Event_Timestamp, Gallons_Used, Irrigation_code, Irrigation_gallons"& _ 
                " FROM Water_Usage_History ORDER BY Event_Timestamp DESC"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (2) Event_Timestamp, Gallons_Used, Irrigation_gallons, Irrigati"& _ 
                "on_code"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Water_Usage_History"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Event_Timestamp DESC"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO Water_Usage_History"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (Event_Timestamp, Gallo"& _ 
                "ns_Used, Irrigation_gallons, Irrigation_code)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (CURRENT_TIMESTAMP,"& _ 
                "@Gallons_Used, 0, '000')"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gallons_Used", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Gallons_Used", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       Water_Usage_History"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Gallons_Used = @GallonsUsed,"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" Event_Timestamp = CURRENT_TIMESTAMP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Event_Timestamp = @Event_Timestamp"& _ 
                ""
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GallonsUsed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Gallons_Used", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "UPDATE Water_Usage_History"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET Event_Timestamp = CURRENT_TIMESTAMP,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Irrigation_"& _ 
                "gallons = @Irrigation_gallons,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Irrigation_code = @Irrigation_code"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Event_"& _ 
                "Timestamp = @Event_Timestamp"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irrigation_gallons", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Irrigation_gallons", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Irrigation_code", Global.System.Data.SqlDbType.NChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, "Irrigation_code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Event_Timestamp", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Event_Timestamp", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As WatchdogDataSet1.Water_Usage_HistoryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As WatchdogDataSet1.Water_Usage_HistoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As WatchdogDataSet1.Water_Usage_HistoryDataTable = New WatchdogDataSet1.Water_Usage_HistoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_MostRecentValue(ByVal dataTable As WatchdogDataSet1.Water_Usage_HistoryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy_MostRecentValue() As WatchdogDataSet1.Water_Usage_HistoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As WatchdogDataSet1.Water_Usage_HistoryDataTable = New WatchdogDataSet1.Water_Usage_HistoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function FillBy_YesterdayGallons() As WatchdogDataSet1.Water_Usage_HistoryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As WatchdogDataSet1.Water_Usage_HistoryDataTable = New WatchdogDataSet1.Water_Usage_HistoryDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As WatchdogDataSet1.Water_Usage_HistoryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As WatchdogDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "Water_Usage_History")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Event_Timestamp As Date, ByVal Gallons_Used As Integer, ByVal Irrigation_gallons As Integer, ByVal Irrigation_code As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Event_Timestamp,Date)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Gallons_Used,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Irrigation_gallons,Integer)
            If (Irrigation_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Irrigation_code")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Irrigation_code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertGallonsUsed(ByVal Gallons_Used As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            command.Parameters(0).Value = CType(Gallons_Used,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateGallonsUsed(ByVal GallonsUsed As Integer, ByVal Event_Timestamp As Date) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            command.Parameters(0).Value = CType(GallonsUsed,Integer)
            command.Parameters(1).Value = CType(Event_Timestamp,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateIrrigationResults(ByVal Irrigation_gallons As Integer, ByVal Irrigation_code As String, ByVal Event_Timestamp As Date) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            command.Parameters(0).Value = CType(Irrigation_gallons,Integer)
            If (Irrigation_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Irrigation_code")
            Else
                command.Parameters(1).Value = CType(Irrigation_code,String)
            End If
            command.Parameters(2).Value = CType(Event_Timestamp,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _event_HistoryTableAdapter As Event_HistoryTableAdapter
        
        Private _irrigation_HistoryTableAdapter As Irrigation_HistoryTableAdapter
        
        Private _irrigation_ControlTableAdapter As Irrigation_ControlTableAdapter
        
        Private _event_Current_StateTableAdapter As Event_Current_StateTableAdapter
        
        Private _water_Usage_HistoryTableAdapter As Water_Usage_HistoryTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Event_HistoryTableAdapter() As Event_HistoryTableAdapter
            Get
                Return Me._event_HistoryTableAdapter
            End Get
            Set
                Me._event_HistoryTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Irrigation_HistoryTableAdapter() As Irrigation_HistoryTableAdapter
            Get
                Return Me._irrigation_HistoryTableAdapter
            End Get
            Set
                Me._irrigation_HistoryTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Irrigation_ControlTableAdapter() As Irrigation_ControlTableAdapter
            Get
                Return Me._irrigation_ControlTableAdapter
            End Get
            Set
                Me._irrigation_ControlTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Event_Current_StateTableAdapter() As Event_Current_StateTableAdapter
            Get
                Return Me._event_Current_StateTableAdapter
            End Get
            Set
                Me._event_Current_StateTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Water_Usage_HistoryTableAdapter() As Water_Usage_HistoryTableAdapter
            Get
                Return Me._water_Usage_HistoryTableAdapter
            End Get
            Set
                Me._water_Usage_HistoryTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._event_HistoryTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._event_HistoryTableAdapter.Connection) Is Nothing)) Then
                    Return Me._event_HistoryTableAdapter.Connection
                End If
                If ((Not (Me._irrigation_HistoryTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._irrigation_HistoryTableAdapter.Connection) Is Nothing)) Then
                    Return Me._irrigation_HistoryTableAdapter.Connection
                End If
                If ((Not (Me._irrigation_ControlTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._irrigation_ControlTableAdapter.Connection) Is Nothing)) Then
                    Return Me._irrigation_ControlTableAdapter.Connection
                End If
                If ((Not (Me._event_Current_StateTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._event_Current_StateTableAdapter.Connection) Is Nothing)) Then
                    Return Me._event_Current_StateTableAdapter.Connection
                End If
                If ((Not (Me._water_Usage_HistoryTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._water_Usage_HistoryTableAdapter.Connection) Is Nothing)) Then
                    Return Me._water_Usage_HistoryTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._event_HistoryTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._irrigation_HistoryTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._irrigation_ControlTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._event_Current_StateTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._water_Usage_HistoryTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As WatchdogDataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._event_HistoryTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Event_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._event_HistoryTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._irrigation_HistoryTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Irrigation_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._irrigation_HistoryTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._irrigation_ControlTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Irrigation_Control.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._irrigation_ControlTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._event_Current_StateTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Event_Current_State.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._event_Current_StateTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._water_Usage_HistoryTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Water_Usage_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._water_Usage_HistoryTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As WatchdogDataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._event_HistoryTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Event_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._event_HistoryTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._irrigation_HistoryTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Irrigation_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._irrigation_HistoryTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._irrigation_ControlTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Irrigation_Control.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._irrigation_ControlTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._event_Current_StateTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Event_Current_State.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._event_Current_StateTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._water_Usage_HistoryTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Water_Usage_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._water_Usage_HistoryTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As WatchdogDataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._water_Usage_HistoryTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Water_Usage_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._water_Usage_HistoryTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._event_Current_StateTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Event_Current_State.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._event_Current_StateTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._irrigation_ControlTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Irrigation_Control.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._irrigation_ControlTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._irrigation_HistoryTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Irrigation_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._irrigation_HistoryTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._event_HistoryTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Event_History.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._event_HistoryTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As WatchdogDataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._event_HistoryTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._event_HistoryTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._irrigation_HistoryTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._irrigation_HistoryTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._irrigation_ControlTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._irrigation_ControlTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._event_Current_StateTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._event_Current_StateTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._water_Usage_HistoryTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._water_Usage_HistoryTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._event_HistoryTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._event_HistoryTableAdapter, Me._event_HistoryTableAdapter.Connection)
                    Me._event_HistoryTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._event_HistoryTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._event_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._event_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._event_HistoryTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._irrigation_HistoryTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._irrigation_HistoryTableAdapter, Me._irrigation_HistoryTableAdapter.Connection)
                    Me._irrigation_HistoryTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._irrigation_HistoryTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._irrigation_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._irrigation_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._irrigation_HistoryTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._irrigation_ControlTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._irrigation_ControlTableAdapter, Me._irrigation_ControlTableAdapter.Connection)
                    Me._irrigation_ControlTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._irrigation_ControlTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._irrigation_ControlTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._irrigation_ControlTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._irrigation_ControlTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._event_Current_StateTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._event_Current_StateTableAdapter, Me._event_Current_StateTableAdapter.Connection)
                    Me._event_Current_StateTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._event_Current_StateTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._event_Current_StateTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._event_Current_StateTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._event_Current_StateTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._water_Usage_HistoryTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._water_Usage_HistoryTableAdapter, Me._water_Usage_HistoryTableAdapter.Connection)
                    Me._water_Usage_HistoryTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._water_Usage_HistoryTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._water_Usage_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._water_Usage_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._water_Usage_HistoryTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._event_HistoryTableAdapter) Is Nothing) Then
                    Me._event_HistoryTableAdapter.Connection = CType(revertConnections(Me._event_HistoryTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._event_HistoryTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._irrigation_HistoryTableAdapter) Is Nothing) Then
                    Me._irrigation_HistoryTableAdapter.Connection = CType(revertConnections(Me._irrigation_HistoryTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._irrigation_HistoryTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._irrigation_ControlTableAdapter) Is Nothing) Then
                    Me._irrigation_ControlTableAdapter.Connection = CType(revertConnections(Me._irrigation_ControlTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._irrigation_ControlTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._event_Current_StateTableAdapter) Is Nothing) Then
                    Me._event_Current_StateTableAdapter.Connection = CType(revertConnections(Me._event_Current_StateTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._event_Current_StateTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._water_Usage_HistoryTableAdapter) Is Nothing) Then
                    Me._water_Usage_HistoryTableAdapter.Connection = CType(revertConnections(Me._water_Usage_HistoryTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._water_Usage_HistoryTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
